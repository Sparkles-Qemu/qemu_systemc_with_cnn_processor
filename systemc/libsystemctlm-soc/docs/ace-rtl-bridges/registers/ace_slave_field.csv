Register Name,Field Name,Bits,Type,Reset Value,Description,Note
BRIDGE_IDENTIFICATION_REG,,,,,,
,IDENTIFICATION_ID,  31:0,ro,0xC3A89FE1,Unique number for Bridge Identification,
BRIDGE_POSITION_REG,,,,,,0x1 : To show this is the last bridge; 0x0 : To show there are still bridges connected to next offset
,RESERVED,  31:1,ro,0x0,,
,LAST_BRIDGE,0,ro,0x0,To Indicate that current bridge is the Last bridge in the design,
VERSION_REG                        ,,,,,,
,RESERVED,  31:16,ro,0x0,,Current value of Bridge version is 0x0100
,MAJOR_VER,  15:8,ro,0x1,,
,MINOR_VER,  7:0,ro,0X0,,
BRIDGE_TYPE_REG,,,,,,
,RESERVED,  31:8,ro,0x0,,
,TYPE,  7:0,ro,NA,"TYPE :
0x0 : AXI3 Bridge in Master Mode
0x1 : AXI3 Bridge in Slave Mode
0x2 : AXI4 Bridge in Master Mode
0x3 : AXI4 Bridge in Slave Mode
0x4 : AXI4-lite Bridge in Master Mode
0x5 : AXI4-lite Bridge in Slave Mode
0x6 : AXI4-Stream Bridge in Master Mode
0x7 : AXI4-Stream Bridge in Slave Mode
0x8 : ACE Bridge in Master Mode
0x9 : ACE Bridge in Slave Mode",
MODE_SELECT_REG,,,,,,
,RESERVED,  31:1,rw,0x0,,
,MODE_0_1,0,rw,0x0,"Mode_0_1: this bit selects the HW Bridgeï¿½s mode of operation.

0: mode_0 register access mode is selected. ;

1: mode_1 Indirect DMA mode is selected. ;",
RESET_REG,,,,,,
,RESERVED, 31:5,rw,0x1,,
,DUT_SRST_3,4,rw,0x1,,
,DUT_SRST_2,3,rw,0x1,,
,DUT_SRST_1,2,rw,0x1,,
,DUT_SRST_0,1,rw,0x1,DUT_SRST_N : Reset for DUT. Software needs to assert and de-assert the reset based on DUT reset requirement.,
,SRST,0,rw,0x1,SRST : Soft reset for Bridge IP. It is Active Low reset. Self Clear Register.,
H2C_INTR_0_REG,,,,,,
,H2C_31,31,rw,0x0,"Host to Card interrupt. SW to set fields to assert corresponding interrupts
 to DUT and unset fields to de-assert corresponding interrupts to DUT.
",
,H2C_30,30,rw,0x0,,
,H2C_29,29,rw,0x0,,
,H2C_28,28,rw,0x0,,
,H2C_27,27,rw,0x0,,
,H2C_26,26,rw,0x0,,
,H2C_25,25,rw,0x0,,
,H2C_24,24,rw,0x0,,
,H2C_23,23,rw,0x0,,
,H2C_22,22,rw,0x0,,
,H2C_21,21,rw,0x0,,
,H2C_20,20,rw,0x0,,
,H2C_19,19,rw,0x0,,
,H2C_18,18,rw,0x0,,
,H2C_17,17,rw,0x0,,
,H2C_16,16,rw,0x0,,
,H2C_15,15,rw,0x0,,
,H2C_14,14,rw,0x0,,
,H2C_13,13,rw,0x0,,
,H2C_12,12,rw,0x0,,
,H2C_11,11,rw,0x0,,
,H2C_10,10,rw,0x0,,
,H2C_9,9,rw,0x0,,
,H2C_8,8,rw,0x0,,
,H2C_7,7,rw,0x0,,
,H2C_6,6,rw,0x0,,
,H2C_5,5,rw,0x0,,
,H2C_4,4,rw,0x0,,
,H2C_3,3,rw,0x0,,
,H2C_2,2,rw,0x0,,
,H2C_1,1,rw,0x0,,
,H2C_0,0,rw,0x0,,
,,,,,,
H2C_INTR_1_REG,,,,,,
,H2C_31,31,rw,0x0,"Host to Card interrupt. SW to set fields to assert corresponding interrupts
 to DUT and unset fields to de-assert corresponding interrupts to DUT.
",
,H2C_30,30,rw,0x0,,
,H2C_29,29,rw,0x0,,
,H2C_28,28,rw,0x0,,
,H2C_27,27,rw,0x0,,
,H2C_26,26,rw,0x0,,
,H2C_25,25,rw,0x0,,
,H2C_24,24,rw,0x0,,
,H2C_23,23,rw,0x0,,
,H2C_22,22,rw,0x0,,
,H2C_21,21,rw,0x0,,
,H2C_20,20,rw,0x0,,
,H2C_19,19,rw,0x0,,
,H2C_18,18,rw,0x0,,
,H2C_17,17,rw,0x0,,
,H2C_16,16,rw,0x0,,
,H2C_15,15,rw,0x0,,
,H2C_14,14,rw,0x0,,
,H2C_13,13,rw,0x0,,
,H2C_12,12,rw,0x0,,
,H2C_11,11,rw,0x0,,
,H2C_10,10,rw,0x0,,
,H2C_9,9,rw,0x0,,
,H2C_8,8,rw,0x0,,
,H2C_7,7,rw,0x0,,
,H2C_6,6,rw,0x0,,
,H2C_5,5,rw,0x0,,
,H2C_4,4,rw,0x0,,
,H2C_3,3,rw,0x0,,
,H2C_2,2,rw,0x0,,
,H2C_1,1,rw,0x0,,
,H2C_0,0,rw,0x0,,
H2C_INTR_2_REG,,,,,,
,H2C_31,31,rw,0x0,"Host to Card interrupt. SW to set fields to assert corresponding interrupts
 to DUT and unset fields to de-assert corresponding interrupts to DUT.
",
,H2C_30,30,rw,0x0,,
,H2C_29,29,rw,0x0,,
,H2C_28,28,rw,0x0,,
,H2C_27,27,rw,0x0,,
,H2C_26,26,rw,0x0,,
,H2C_25,25,rw,0x0,,
,H2C_24,24,rw,0x0,,
,H2C_23,23,rw,0x0,,
,H2C_22,22,rw,0x0,,
,H2C_21,21,rw,0x0,,
,H2C_20,20,rw,0x0,,
,H2C_19,19,rw,0x0,,
,H2C_18,18,rw,0x0,,
,H2C_17,17,rw,0x0,,
,H2C_16,16,rw,0x0,,
,H2C_15,15,rw,0x0,,
,H2C_14,14,rw,0x0,,
,H2C_13,13,rw,0x0,,
,H2C_12,12,rw,0x0,,
,H2C_11,11,rw,0x0,,
,H2C_10,10,rw,0x0,,
,H2C_9,9,rw,0x0,,
,H2C_8,8,rw,0x0,,
,H2C_7,7,rw,0x0,,
,H2C_6,6,rw,0x0,,
,H2C_5,5,rw,0x0,,
,H2C_4,4,rw,0x0,,
,H2C_3,3,rw,0x0,,
,H2C_2,2,rw,0x0,,
,H2C_1,1,rw,0x0,,
,H2C_0,0,rw,0x0,,
H2C_INTR_3_REG,,,,,,
,H2C_31,31,rw,0x0,"Host to Card interrupt. SW to set fields to assert corresponding interrupts
 to DUT and unset fields to de-assert corresponding interrupts to DUT.
",
,H2C_30,30,rw,0x0,,
,H2C_29,29,rw,0x0,,
,H2C_28,28,rw,0x0,,
,H2C_27,27,rw,0x0,,
,H2C_26,26,rw,0x0,,
,H2C_25,25,rw,0x0,,
,H2C_24,24,rw,0x0,,
,H2C_23,23,rw,0x0,,
,H2C_22,22,rw,0x0,,
,H2C_21,21,rw,0x0,,
,H2C_20,20,rw,0x0,,
,H2C_19,19,rw,0x0,,
,H2C_18,18,rw,0x0,,
,H2C_17,17,rw,0x0,,
,H2C_16,16,rw,0x0,,
,H2C_15,15,rw,0x0,,
,H2C_14,14,rw,0x0,,
,H2C_13,13,rw,0x0,,
,H2C_12,12,rw,0x0,,
,H2C_11,11,rw,0x0,,
,H2C_10,10,rw,0x0,,
,H2C_9,9,rw,0x0,,
,H2C_8,8,rw,0x0,,
,H2C_7,7,rw,0x0,,
,H2C_6,6,rw,0x0,,
,H2C_5,5,rw,0x0,,
,H2C_4,4,rw,0x0,,
,H2C_3,3,rw,0x0,,
,H2C_2,2,rw,0x0,,
,H2C_1,1,rw,0x0,,
,H2C_0,0,rw,0x0,,
,,,,,,
C2H_INTR_STATUS_0_REG,,,,,,
,C2H_31,31,ro,0x0,"Card to Host interrupt. HW updates to 1 or 0 for corresponding interrupts
 from DUT.
",
,C2H_30,30,ro,0x0,,
,C2H_29,29,ro,0x0,,
,C2H_28,28,ro,0x0,,
,C2H_27,27,ro,0x0,,
,C2H_26,26,ro,0x0,,
,C2H_25,25,ro,0x0,,
,C2H_24,24,ro,0x0,,
,C2H_23,23,ro,0x0,,
,C2H_22,22,ro,0x0,,
,C2H_21,21,ro,0x0,,
,C2H_20,20,ro,0x0,,
,C2H_19,19,ro,0x0,,
,C2H_18,18,ro,0x0,,
,C2H_17,17,ro,0x0,,
,C2H_16,16,ro,0x0,,
,C2H_15,15,ro,0x0,,
,C2H_14,14,ro,0x0,,
,C2H_13,13,ro,0x0,,
,C2H_12,12,ro,0x0,,
,C2H_11,11,ro,0x0,,
,C2H_10,10,ro,0x0,,
,C2H_9,9,ro,0x0,,
,C2H_8,8,ro,0x0,,
,C2H_7,7,ro,0x0,,
,C2H_6,6,ro,0x0,,
,C2H_5,5,ro,0x0,,
,C2H_4,4,ro,0x0,,
,C2H_3,3,ro,0x0,,
,C2H_2,2,ro,0x0,,
,C2H_1,1,ro,0x0,,
,C2H_0,0,ro,0x0,,
INTR_C2H_TOGGLE_STATUS_0_REG,,,,,,
,T_C2H_31,31,ro,0x0,"Card to Host interrupt toggle status. HW sets corresponding interrupt toggle status to 1 whenever there is any change in INTR Status ( Posedge or Negedge ) from DUT
",
,T_C2H_30,30,ro,0x0,,
,T_C2H_29,29,ro,0x0,,
,T_C2H_28,28,ro,0x0,,
,T_C2H_27,27,ro,0x0,,
,T_C2H_26,26,ro,0x0,,
,T_C2H_25,25,ro,0x0,,
,T_C2H_24,24,ro,0x0,,
,T_C2H_23,23,ro,0x0,,
,T_C2H_22,22,ro,0x0,,
,T_C2H_21,21,ro,0x0,,
,T_C2H_20,20,ro,0x0,,
,T_C2H_19,19,ro,0x0,,
,T_C2H_18,18,ro,0x0,,
,T_C2H_17,17,ro,0x0,,
,T_C2H_16,16,ro,0x0,,
,T_C2H_15,15,ro,0x0,,
,T_C2H_14,14,ro,0x0,,
,T_C2H_13,13,ro,0x0,,
,T_C2H_12,12,ro,0x0,,
,T_C2H_11,11,ro,0x0,,
,T_C2H_10,10,ro,0x0,,
,T_C2H_9,9,ro,0x0,,
,T_C2H_8,8,ro,0x0,,
,T_C2H_7,7,ro,0x0,,
,T_C2H_6,6,ro,0x0,,
,T_C2H_5,5,ro,0x0,,
,T_C2H_4,4,ro,0x0,,
,T_C2H_3,3,ro,0x0,,
,T_C2H_2,2,ro,0x0,,
,T_C2H_1,1,ro,0x0,,
,T_C2H_0,0,ro,0x0,,
INTR_C2H_TOGGLE_CLEAR_0_REG,,,,,,
,CLR_T_C2H_31,31,w1sraz,0x0,Card to Host interrupt toggle clear. SW sets corresponding clear bits to 1 to clear respective toggle status bits,
,CLR_T_C2H_30,30,w1sraz,0x0,,
,CLR_T_C2H_29,29,w1sraz,0x0,,
,CLR_T_C2H_28,28,w1sraz,0x0,,
,CLR_T_C2H_27,27,w1sraz,0x0,,
,CLR_T_C2H_26,26,w1sraz,0x0,,
,CLR_T_C2H_25,25,w1sraz,0x0,,
,CLR_T_C2H_24,24,w1sraz,0x0,,
,CLR_T_C2H_23,23,w1sraz,0x0,,
,CLR_T_C2H_22,22,w1sraz,0x0,,
,CLR_T_C2H_21,21,w1sraz,0x0,,
,CLR_T_C2H_20,20,w1sraz,0x0,,
,CLR_T_C2H_19,19,w1sraz,0x0,,
,CLR_T_C2H_18,18,w1sraz,0x0,,
,CLR_T_C2H_17,17,w1sraz,0x0,,
,CLR_T_C2H_16,16,w1sraz,0x0,,
,CLR_T_C2H_15,15,w1sraz,0x0,,
,CLR_T_C2H_14,14,w1sraz,0x0,,
,CLR_T_C2H_13,13,w1sraz,0x0,,
,CLR_T_C2H_12,12,w1sraz,0x0,,
,CLR_T_C2H_11,11,w1sraz,0x0,,
,CLR_T_C2H_10,10,w1sraz,0x0,,
,CLR_T_C2H_9,9,w1sraz,0x0,,
,CLR_T_C2H_8,8,w1sraz,0x0,,
,CLR_T_C2H_7,7,w1sraz,0x0,,
,CLR_T_C2H_6,6,w1sraz,0x0,,
,CLR_T_C2H_5,5,w1sraz,0x0,,
,CLR_T_C2H_4,4,w1sraz,0x0,,
,CLR_T_C2H_3,3,w1sraz,0x0,,
,CLR_T_C2H_2,2,w1sraz,0x0,,
,CLR_T_C2H_1,1,w1sraz,0x0,,
,CLR_T_C2H_0,0,w1sraz,0x0,,
INTR_C2H_TOGGLE_ENABLE_0_REG,,,,,,
,EN_T_C2H_31,31,rw,0x0,Card to Host interrupt toggle enable. SW sets corresponding bits to 1 to enable Interrupt generation towards Host whenever respective C2H INTR bits from DUT toggles. ,
,EN_T_C2H_30,30,rw,0x0,,
,EN_T_C2H_29,29,rw,0x0,,
,EN_T_C2H_28,28,rw,0x0,,
,EN_T_C2H_27,27,rw,0x0,,
,EN_T_C2H_26,26,rw,0x0,,
,EN_T_C2H_25,25,rw,0x0,,
,EN_T_C2H_24,24,rw,0x0,,
,EN_T_C2H_23,23,rw,0x0,,
,EN_T_C2H_22,22,rw,0x0,,
,EN_T_C2H_21,21,rw,0x0,,
,EN_T_C2H_20,20,rw,0x0,,
,EN_T_C2H_19,19,rw,0x0,,
,EN_T_C2H_18,18,rw,0x0,,
,EN_T_C2H_17,17,rw,0x0,,
,EN_T_C2H_16,16,rw,0x0,,
,EN_T_C2H_15,15,rw,0x0,,
,EN_T_C2H_14,14,rw,0x0,,
,EN_T_C2H_13,13,rw,0x0,,
,EN_T_C2H_12,12,rw,0x0,,
,EN_T_C2H_11,11,rw,0x0,,
,EN_T_C2H_10,10,rw,0x0,,
,EN_T_C2H_9,9,rw,0x0,,
,EN_T_C2H_8,8,rw,0x0,,
,EN_T_C2H_7,7,rw,0x0,,
,EN_T_C2H_6,6,rw,0x0,,
,EN_T_C2H_5,5,rw,0x0,,
,EN_T_C2H_4,4,rw,0x0,,
,EN_T_C2H_3,3,rw,0x0,,
,EN_T_C2H_2,2,rw,0x0,,
,EN_T_C2H_1,1,rw,0x0,,
,EN_T_C2H_0,0,rw,0x0,,
C2H_INTR_STATUS_1_REG,,,,,,
,C2H_31,31,ro,0x0,"Card to Host interrupt. HW updates to 1 or 0 for corresponding interrupts
 from DUT.
",
,C2H_30,30,ro,0x0,,
,C2H_29,29,ro,0x0,,
,C2H_28,28,ro,0x0,,
,C2H_27,27,ro,0x0,,
,C2H_26,26,ro,0x0,,
,C2H_25,25,ro,0x0,,
,C2H_24,24,ro,0x0,,
,C2H_23,23,ro,0x0,,
,C2H_22,22,ro,0x0,,
,C2H_21,21,ro,0x0,,
,C2H_20,20,ro,0x0,,
,C2H_19,19,ro,0x0,,
,C2H_18,18,ro,0x0,,
,C2H_17,17,ro,0x0,,
,C2H_16,16,ro,0x0,,
,C2H_15,15,ro,0x0,,
,C2H_14,14,ro,0x0,,
,C2H_13,13,ro,0x0,,
,C2H_12,12,ro,0x0,,
,C2H_11,11,ro,0x0,,
,C2H_10,10,ro,0x0,,
,C2H_9,9,ro,0x0,,
,C2H_8,8,ro,0x0,,
,C2H_7,7,ro,0x0,,
,C2H_6,6,ro,0x0,,
,C2H_5,5,ro,0x0,,
,C2H_4,4,ro,0x0,,
,C2H_3,3,ro,0x0,,
,C2H_2,2,ro,0x0,,
,C2H_1,1,ro,0x0,,
,C2H_0,0,ro,0x0,,
INTR_C2H_TOGGLE_STATUS_1_REG,,,,,,
,T_C2H_31,31,ro,0x0,"Card to Host interrupt toggle status. HW sets corresponding interrupt toggle status to 1 whenever there is any change in INTR Status ( Posedge or Negedge ) from DUT
",
,T_C2H_30,30,ro,0x0,,
,T_C2H_29,29,ro,0x0,,
,T_C2H_28,28,ro,0x0,,
,T_C2H_27,27,ro,0x0,,
,T_C2H_26,26,ro,0x0,,
,T_C2H_25,25,ro,0x0,,
,T_C2H_24,24,ro,0x0,,
,T_C2H_23,23,ro,0x0,,
,T_C2H_22,22,ro,0x0,,
,T_C2H_21,21,ro,0x0,,
,T_C2H_20,20,ro,0x0,,
,T_C2H_19,19,ro,0x0,,
,T_C2H_18,18,ro,0x0,,
,T_C2H_17,17,ro,0x0,,
,T_C2H_16,16,ro,0x0,,
,T_C2H_15,15,ro,0x0,,
,T_C2H_14,14,ro,0x0,,
,T_C2H_13,13,ro,0x0,,
,T_C2H_12,12,ro,0x0,,
,T_C2H_11,11,ro,0x0,,
,T_C2H_10,10,ro,0x0,,
,T_C2H_9,9,ro,0x0,,
,T_C2H_8,8,ro,0x0,,
,T_C2H_7,7,ro,0x0,,
,T_C2H_6,6,ro,0x0,,
,T_C2H_5,5,ro,0x0,,
,T_C2H_4,4,ro,0x0,,
,T_C2H_3,3,ro,0x0,,
,T_C2H_2,2,ro,0x0,,
,T_C2H_1,1,ro,0x0,,
,T_C2H_0,0,ro,0x0,,
INTR_C2H_TOGGLE_CLEAR_1_REG,,,,,,
,CLR_T_C2H_31,31,w1sraz,0x0,Card to Host interrupt toggle clear. SW sets corresponding clear bits to 1 to clear respective toggle status bits,
,CLR_T_C2H_30,30,w1sraz,0x0,,
,CLR_T_C2H_29,29,w1sraz,0x0,,
,CLR_T_C2H_28,28,w1sraz,0x0,,
,CLR_T_C2H_27,27,w1sraz,0x0,,
,CLR_T_C2H_26,26,w1sraz,0x0,,
,CLR_T_C2H_25,25,w1sraz,0x0,,
,CLR_T_C2H_24,24,w1sraz,0x0,,
,CLR_T_C2H_23,23,w1sraz,0x0,,
,CLR_T_C2H_22,22,w1sraz,0x0,,
,CLR_T_C2H_21,21,w1sraz,0x0,,
,CLR_T_C2H_20,20,w1sraz,0x0,,
,CLR_T_C2H_19,19,w1sraz,0x0,,
,CLR_T_C2H_18,18,w1sraz,0x0,,
,CLR_T_C2H_17,17,w1sraz,0x0,,
,CLR_T_C2H_16,16,w1sraz,0x0,,
,CLR_T_C2H_15,15,w1sraz,0x0,,
,CLR_T_C2H_14,14,w1sraz,0x0,,
,CLR_T_C2H_13,13,w1sraz,0x0,,
,CLR_T_C2H_12,12,w1sraz,0x0,,
,CLR_T_C2H_11,11,w1sraz,0x0,,
,CLR_T_C2H_10,10,w1sraz,0x0,,
,CLR_T_C2H_9,9,w1sraz,0x0,,
,CLR_T_C2H_8,8,w1sraz,0x0,,
,CLR_T_C2H_7,7,w1sraz,0x0,,
,CLR_T_C2H_6,6,w1sraz,0x0,,
,CLR_T_C2H_5,5,w1sraz,0x0,,
,CLR_T_C2H_4,4,w1sraz,0x0,,
,CLR_T_C2H_3,3,w1sraz,0x0,,
,CLR_T_C2H_2,2,w1sraz,0x0,,
,CLR_T_C2H_1,1,w1sraz,0x0,,
,CLR_T_C2H_0,0,w1sraz,0x0,,
INTR_C2H_TOGGLE_ENABLE_1_REG,,,,,,
,EN_T_C2H_31,31,rw,0x0,Card to Host interrupt toggle enable. SW sets corresponding bits to 1 to enable Interrupt generation towards Host whenever respective C2H INTR bits from DUT toggles. ,
,EN_T_C2H_30,30,rw,0x0,,
,EN_T_C2H_29,29,rw,0x0,,
,EN_T_C2H_28,28,rw,0x0,,
,EN_T_C2H_27,27,rw,0x0,,
,EN_T_C2H_26,26,rw,0x0,,
,EN_T_C2H_25,25,rw,0x0,,
,EN_T_C2H_24,24,rw,0x0,,
,EN_T_C2H_23,23,rw,0x0,,
,EN_T_C2H_22,22,rw,0x0,,
,EN_T_C2H_21,21,rw,0x0,,
,EN_T_C2H_20,20,rw,0x0,,
,EN_T_C2H_19,19,rw,0x0,,
,EN_T_C2H_18,18,rw,0x0,,
,EN_T_C2H_17,17,rw,0x0,,
,EN_T_C2H_16,16,rw,0x0,,
,EN_T_C2H_15,15,rw,0x0,,
,EN_T_C2H_14,14,rw,0x0,,
,EN_T_C2H_13,13,rw,0x0,,
,EN_T_C2H_12,12,rw,0x0,,
,EN_T_C2H_11,11,rw,0x0,,
,EN_T_C2H_10,10,rw,0x0,,
,EN_T_C2H_9,9,rw,0x0,,
,EN_T_C2H_8,8,rw,0x0,,
,EN_T_C2H_7,7,rw,0x0,,
,EN_T_C2H_6,6,rw,0x0,,
,EN_T_C2H_5,5,rw,0x0,,
,EN_T_C2H_4,4,rw,0x0,,
,EN_T_C2H_3,3,rw,0x0,,
,EN_T_C2H_2,2,rw,0x0,,
,EN_T_C2H_1,1,rw,0x0,,
,EN_T_C2H_0,0,rw,0x0,,
C2H_GPIO_0_REG,,,,,To monitor 32-bit GPIO from FPGA,
,GPIO_31,31,ro,0x0,,
,GPIO_30,30,ro,0x0,,
,GPIO_29,29,ro,0x0,,
,GPIO_28,28,ro,0x0,,
,GPIO_27,27,ro,0x0,,
,GPIO_26,26,ro,0x0,,
,GPIO_25,25,ro,0x0,,
,GPIO_24,24,ro,0x0,,
,GPIO_23,23,ro,0x0,,
,GPIO_22,22,ro,0x0,,
,GPIO_21,21,ro,0x0,,
,GPIO_20,20,ro,0x0,,
,GPIO_19,19,ro,0x0,,
,GPIO_18,18,ro,0x0,,
,GPIO_17,17,ro,0x0,,
,GPIO_16,16,ro,0x0,,
,GPIO_15,15,ro,0x0,,
,GPIO_14,14,ro,0x0,,
,GPIO_13,13,ro,0x0,,
,GPIO_12,12,ro,0x0,,
,GPIO_11,11,ro,0x0,,
,GPIO_10,10,ro,0x0,,
,GPIO_9,9,ro,0x0,,
,GPIO_8,8,ro,0x0,,
,GPIO_7,7,ro,0x0,,
,GPIO_6,6,ro,0x0,,
,GPIO_5,5,ro,0x0,,
,GPIO_4,4,ro,0x0,,
,GPIO_3,3,ro,0x0,,
,GPIO_2,2,ro,0x0,,
,GPIO_1,1,ro,0x0,,
,GPIO_0,0,ro,0x0,,
C2H_GPIO_1_REG,,,,,To monitor 32-bit GPIO from FPGA,
,GPIO_31,31,ro,0x0,,
,GPIO_30,30,ro,0x0,,
,GPIO_29,29,ro,0x0,,
,GPIO_28,28,ro,0x0,,
,GPIO_27,27,ro,0x0,,
,GPIO_26,26,ro,0x0,,
,GPIO_25,25,ro,0x0,,
,GPIO_24,24,ro,0x0,,
,GPIO_23,23,ro,0x0,,
,GPIO_22,22,ro,0x0,,
,GPIO_21,21,ro,0x0,,
,GPIO_20,20,ro,0x0,,
,GPIO_19,19,ro,0x0,,
,GPIO_18,18,ro,0x0,,
,GPIO_17,17,ro,0x0,,
,GPIO_16,16,ro,0x0,,
,GPIO_15,15,ro,0x0,,
,GPIO_14,14,ro,0x0,,
,GPIO_13,13,ro,0x0,,
,GPIO_12,12,ro,0x0,,
,GPIO_11,11,ro,0x0,,
,GPIO_10,10,ro,0x0,,
,GPIO_9,9,ro,0x0,,
,GPIO_8,8,ro,0x0,,
,GPIO_7,7,ro,0x0,,
,GPIO_6,6,ro,0x0,,
,GPIO_5,5,ro,0x0,,
,GPIO_4,4,ro,0x0,,
,GPIO_3,3,ro,0x0,,
,GPIO_2,2,ro,0x0,,
,GPIO_1,1,ro,0x0,,
,GPIO_0,0,ro,0x0,,
C2H_GPIO_2_REG,,,,,To monitor 32-bit GPIO from FPGA,
,GPIO_31,31,ro,0x0,,
,GPIO_30,30,ro,0x0,,
,GPIO_29,29,ro,0x0,,
,GPIO_28,28,ro,0x0,,
,GPIO_27,27,ro,0x0,,
,GPIO_26,26,ro,0x0,,
,GPIO_25,25,ro,0x0,,
,GPIO_24,24,ro,0x0,,
,GPIO_23,23,ro,0x0,,
,GPIO_22,22,ro,0x0,,
,GPIO_21,21,ro,0x0,,
,GPIO_20,20,ro,0x0,,
,GPIO_19,19,ro,0x0,,
,GPIO_18,18,ro,0x0,,
,GPIO_17,17,ro,0x0,,
,GPIO_16,16,ro,0x0,,
,GPIO_15,15,ro,0x0,,
,GPIO_14,14,ro,0x0,,
,GPIO_13,13,ro,0x0,,
,GPIO_12,12,ro,0x0,,
,GPIO_11,11,ro,0x0,,
,GPIO_10,10,ro,0x0,,
,GPIO_9,9,ro,0x0,,
,GPIO_8,8,ro,0x0,,
,GPIO_7,7,ro,0x0,,
,GPIO_6,6,ro,0x0,,
,GPIO_5,5,ro,0x0,,
,GPIO_4,4,ro,0x0,,
,GPIO_3,3,ro,0x0,,
,GPIO_2,2,ro,0x0,,
,GPIO_1,1,ro,0x0,,
,GPIO_0,0,ro,0x0,,
C2H_GPIO_3_REG,,,,,To monitor 32-bit GPIO from FPGA,
,GPIO_31,31,ro,0x0,,
,GPIO_30,30,ro,0x0,,
,GPIO_29,29,ro,0x0,,
,GPIO_28,28,ro,0x0,,
,GPIO_27,27,ro,0x0,,
,GPIO_26,26,ro,0x0,,
,GPIO_25,25,ro,0x0,,
,GPIO_24,24,ro,0x0,,
,GPIO_23,23,ro,0x0,,
,GPIO_22,22,ro,0x0,,
,GPIO_21,21,ro,0x0,,
,GPIO_20,20,ro,0x0,,
,GPIO_19,19,ro,0x0,,
,GPIO_18,18,ro,0x0,,
,GPIO_17,17,ro,0x0,,
,GPIO_16,16,ro,0x0,,
,GPIO_15,15,ro,0x0,,
,GPIO_14,14,ro,0x0,,
,GPIO_13,13,ro,0x0,,
,GPIO_12,12,ro,0x0,,
,GPIO_11,11,ro,0x0,,
,GPIO_10,10,ro,0x0,,
,GPIO_9,9,ro,0x0,,
,GPIO_8,8,ro,0x0,,
,GPIO_7,7,ro,0x0,,
,GPIO_6,6,ro,0x0,,
,GPIO_5,5,ro,0x0,,
,GPIO_4,4,ro,0x0,,
,GPIO_3,3,ro,0x0,,
,GPIO_2,2,ro,0x0,,
,GPIO_1,1,ro,0x0,,
,GPIO_0,0,ro,0x0,,
C2H_GPIO_4_REG,,,,,To monitor 32-bit GPIO from FPGA,
,GPIO_31,31,ro,0x0,,
,GPIO_30,30,ro,0x0,,
,GPIO_29,29,ro,0x0,,
,GPIO_28,28,ro,0x0,,
,GPIO_27,27,ro,0x0,,
,GPIO_26,26,ro,0x0,,
,GPIO_25,25,ro,0x0,,
,GPIO_24,24,ro,0x0,,
,GPIO_23,23,ro,0x0,,
,GPIO_22,22,ro,0x0,,
,GPIO_21,21,ro,0x0,,
,GPIO_20,20,ro,0x0,,
,GPIO_19,19,ro,0x0,,
,GPIO_18,18,ro,0x0,,
,GPIO_17,17,ro,0x0,,
,GPIO_16,16,ro,0x0,,
,GPIO_15,15,ro,0x0,,
,GPIO_14,14,ro,0x0,,
,GPIO_13,13,ro,0x0,,
,GPIO_12,12,ro,0x0,,
,GPIO_11,11,ro,0x0,,
,GPIO_10,10,ro,0x0,,
,GPIO_9,9,ro,0x0,,
,GPIO_8,8,ro,0x0,,
,GPIO_7,7,ro,0x0,,
,GPIO_6,6,ro,0x0,,
,GPIO_5,5,ro,0x0,,
,GPIO_4,4,ro,0x0,,
,GPIO_3,3,ro,0x0,,
,GPIO_2,2,ro,0x0,,
,GPIO_1,1,ro,0x0,,
,GPIO_0,0,ro,0x0,,
C2H_GPIO_5_REG,,,,,To monitor 32-bit GPIO from FPGA,
,GPIO_31,31,ro,0x0,,
,GPIO_30,30,ro,0x0,,
,GPIO_29,29,ro,0x0,,
,GPIO_28,28,ro,0x0,,
,GPIO_27,27,ro,0x0,,
,GPIO_26,26,ro,0x0,,
,GPIO_25,25,ro,0x0,,
,GPIO_24,24,ro,0x0,,
,GPIO_23,23,ro,0x0,,
,GPIO_22,22,ro,0x0,,
,GPIO_21,21,ro,0x0,,
,GPIO_20,20,ro,0x0,,
,GPIO_19,19,ro,0x0,,
,GPIO_18,18,ro,0x0,,
,GPIO_17,17,ro,0x0,,
,GPIO_16,16,ro,0x0,,
,GPIO_15,15,ro,0x0,,
,GPIO_14,14,ro,0x0,,
,GPIO_13,13,ro,0x0,,
,GPIO_12,12,ro,0x0,,
,GPIO_11,11,ro,0x0,,
,GPIO_10,10,ro,0x0,,
,GPIO_9,9,ro,0x0,,
,GPIO_8,8,ro,0x0,,
,GPIO_7,7,ro,0x0,,
,GPIO_6,6,ro,0x0,,
,GPIO_5,5,ro,0x0,,
,GPIO_4,4,ro,0x0,,
,GPIO_3,3,ro,0x0,,
,GPIO_2,2,ro,0x0,,
,GPIO_1,1,ro,0x0,,
,GPIO_0,0,ro,0x0,,
C2H_GPIO_6_REG,,,,,To monitor 32-bit GPIO from FPGA,
,GPIO_31,31,ro,0x0,,
,GPIO_30,30,ro,0x0,,
,GPIO_29,29,ro,0x0,,
,GPIO_28,28,ro,0x0,,
,GPIO_27,27,ro,0x0,,
,GPIO_26,26,ro,0x0,,
,GPIO_25,25,ro,0x0,,
,GPIO_24,24,ro,0x0,,
,GPIO_23,23,ro,0x0,,
,GPIO_22,22,ro,0x0,,
,GPIO_21,21,ro,0x0,,
,GPIO_20,20,ro,0x0,,
,GPIO_19,19,ro,0x0,,
,GPIO_18,18,ro,0x0,,
,GPIO_17,17,ro,0x0,,
,GPIO_16,16,ro,0x0,,
,GPIO_15,15,ro,0x0,,
,GPIO_14,14,ro,0x0,,
,GPIO_13,13,ro,0x0,,
,GPIO_12,12,ro,0x0,,
,GPIO_11,11,ro,0x0,,
,GPIO_10,10,ro,0x0,,
,GPIO_9,9,ro,0x0,,
,GPIO_8,8,ro,0x0,,
,GPIO_7,7,ro,0x0,,
,GPIO_6,6,ro,0x0,,
,GPIO_5,5,ro,0x0,,
,GPIO_4,4,ro,0x0,,
,GPIO_3,3,ro,0x0,,
,GPIO_2,2,ro,0x0,,
,GPIO_1,1,ro,0x0,,
,GPIO_0,0,ro,0x0,,
C2H_GPIO_7_REG,,,,,To monitor 32-bit GPIO from FPGA,
,GPIO_31,31,ro,0x0,,
,GPIO_30,30,ro,0x0,,
,GPIO_29,29,ro,0x0,,
,GPIO_28,28,ro,0x0,,
,GPIO_27,27,ro,0x0,,
,GPIO_26,26,ro,0x0,,
,GPIO_25,25,ro,0x0,,
,GPIO_24,24,ro,0x0,,
,GPIO_23,23,ro,0x0,,
,GPIO_22,22,ro,0x0,,
,GPIO_21,21,ro,0x0,,
,GPIO_20,20,ro,0x0,,
,GPIO_19,19,ro,0x0,,
,GPIO_18,18,ro,0x0,,
,GPIO_17,17,ro,0x0,,
,GPIO_16,16,ro,0x0,,
,GPIO_15,15,ro,0x0,,
,GPIO_14,14,ro,0x0,,
,GPIO_13,13,ro,0x0,,
,GPIO_12,12,ro,0x0,,
,GPIO_11,11,ro,0x0,,
,GPIO_10,10,ro,0x0,,
,GPIO_9,9,ro,0x0,,
,GPIO_8,8,ro,0x0,,
,GPIO_7,7,ro,0x0,,
,GPIO_6,6,ro,0x0,,
,GPIO_5,5,ro,0x0,,
,GPIO_4,4,ro,0x0,,
,GPIO_3,3,ro,0x0,,
,GPIO_2,2,ro,0x0,,
,GPIO_1,1,ro,0x0,,
,GPIO_0,0,ro,0x0,,
C2H_GPIO_8_REG,,,,,To monitor 32-bit GPIO from FPGA,
,GPIO_31,31,ro,0x0,,
,GPIO_30,30,ro,0x0,,
,GPIO_29,29,ro,0x0,,
,GPIO_28,28,ro,0x0,,
,GPIO_27,27,ro,0x0,,
,GPIO_26,26,ro,0x0,,
,GPIO_25,25,ro,0x0,,
,GPIO_24,24,ro,0x0,,
,GPIO_23,23,ro,0x0,,
,GPIO_22,22,ro,0x0,,
,GPIO_21,21,ro,0x0,,
,GPIO_20,20,ro,0x0,,
,GPIO_19,19,ro,0x0,,
,GPIO_18,18,ro,0x0,,
,GPIO_17,17,ro,0x0,,
,GPIO_16,16,ro,0x0,,
,GPIO_15,15,ro,0x0,,
,GPIO_14,14,ro,0x0,,
,GPIO_13,13,ro,0x0,,
,GPIO_12,12,ro,0x0,,
,GPIO_11,11,ro,0x0,,
,GPIO_10,10,ro,0x0,,
,GPIO_9,9,ro,0x0,,
,GPIO_8,8,ro,0x0,,
,GPIO_7,7,ro,0x0,,
,GPIO_6,6,ro,0x0,,
,GPIO_5,5,ro,0x0,,
,GPIO_4,4,ro,0x0,,
,GPIO_3,3,ro,0x0,,
,GPIO_2,2,ro,0x0,,
,GPIO_1,1,ro,0x0,,
,GPIO_0,0,ro,0x0,,
C2H_GPIO_9_REG,,,,,To monitor 32-bit GPIO from FPGA,
,GPIO_31,31,ro,0x0,,
,GPIO_30,30,ro,0x0,,
,GPIO_29,29,ro,0x0,,
,GPIO_28,28,ro,0x0,,
,GPIO_27,27,ro,0x0,,
,GPIO_26,26,ro,0x0,,
,GPIO_25,25,ro,0x0,,
,GPIO_24,24,ro,0x0,,
,GPIO_23,23,ro,0x0,,
,GPIO_22,22,ro,0x0,,
,GPIO_21,21,ro,0x0,,
,GPIO_20,20,ro,0x0,,
,GPIO_19,19,ro,0x0,,
,GPIO_18,18,ro,0x0,,
,GPIO_17,17,ro,0x0,,
,GPIO_16,16,ro,0x0,,
,GPIO_15,15,ro,0x0,,
,GPIO_14,14,ro,0x0,,
,GPIO_13,13,ro,0x0,,
,GPIO_12,12,ro,0x0,,
,GPIO_11,11,ro,0x0,,
,GPIO_10,10,ro,0x0,,
,GPIO_9,9,ro,0x0,,
,GPIO_8,8,ro,0x0,,
,GPIO_7,7,ro,0x0,,
,GPIO_6,6,ro,0x0,,
,GPIO_5,5,ro,0x0,,
,GPIO_4,4,ro,0x0,,
,GPIO_3,3,ro,0x0,,
,GPIO_2,2,ro,0x0,,
,GPIO_1,1,ro,0x0,,
,GPIO_0,0,ro,0x0,,
C2H_GPIO_10_REG,,,,,To monitor 32-bit GPIO from FPGA,
,GPIO_31,31,ro,0x0,,
,GPIO_30,30,ro,0x0,,
,GPIO_29,29,ro,0x0,,
,GPIO_28,28,ro,0x0,,
,GPIO_27,27,ro,0x0,,
,GPIO_26,26,ro,0x0,,
,GPIO_25,25,ro,0x0,,
,GPIO_24,24,ro,0x0,,
,GPIO_23,23,ro,0x0,,
,GPIO_22,22,ro,0x0,,
,GPIO_21,21,ro,0x0,,
,GPIO_20,20,ro,0x0,,
,GPIO_19,19,ro,0x0,,
,GPIO_18,18,ro,0x0,,
,GPIO_17,17,ro,0x0,,
,GPIO_16,16,ro,0x0,,
,GPIO_15,15,ro,0x0,,
,GPIO_14,14,ro,0x0,,
,GPIO_13,13,ro,0x0,,
,GPIO_12,12,ro,0x0,,
,GPIO_11,11,ro,0x0,,
,GPIO_10,10,ro,0x0,,
,GPIO_9,9,ro,0x0,,
,GPIO_8,8,ro,0x0,,
,GPIO_7,7,ro,0x0,,
,GPIO_6,6,ro,0x0,,
,GPIO_5,5,ro,0x0,,
,GPIO_4,4,ro,0x0,,
,GPIO_3,3,ro,0x0,,
,GPIO_2,2,ro,0x0,,
,GPIO_1,1,ro,0x0,,
,GPIO_0,0,ro,0x0,,
C2H_GPIO_11_REG,,,,,To monitor 32-bit GPIO from FPGA,
,GPIO_31,31,ro,0x0,,
,GPIO_30,30,ro,0x0,,
,GPIO_29,29,ro,0x0,,
,GPIO_28,28,ro,0x0,,
,GPIO_27,27,ro,0x0,,
,GPIO_26,26,ro,0x0,,
,GPIO_25,25,ro,0x0,,
,GPIO_24,24,ro,0x0,,
,GPIO_23,23,ro,0x0,,
,GPIO_22,22,ro,0x0,,
,GPIO_21,21,ro,0x0,,
,GPIO_20,20,ro,0x0,,
,GPIO_19,19,ro,0x0,,
,GPIO_18,18,ro,0x0,,
,GPIO_17,17,ro,0x0,,
,GPIO_16,16,ro,0x0,,
,GPIO_15,15,ro,0x0,,
,GPIO_14,14,ro,0x0,,
,GPIO_13,13,ro,0x0,,
,GPIO_12,12,ro,0x0,,
,GPIO_11,11,ro,0x0,,
,GPIO_10,10,ro,0x0,,
,GPIO_9,9,ro,0x0,,
,GPIO_8,8,ro,0x0,,
,GPIO_7,7,ro,0x0,,
,GPIO_6,6,ro,0x0,,
,GPIO_5,5,ro,0x0,,
,GPIO_4,4,ro,0x0,,
,GPIO_3,3,ro,0x0,,
,GPIO_2,2,ro,0x0,,
,GPIO_1,1,ro,0x0,,
,GPIO_0,0,ro,0x0,,
C2H_GPIO_12_REG,,,,,To monitor 32-bit GPIO from FPGA,
,GPIO_31,31,ro,0x0,,
,GPIO_30,30,ro,0x0,,
,GPIO_29,29,ro,0x0,,
,GPIO_28,28,ro,0x0,,
,GPIO_27,27,ro,0x0,,
,GPIO_26,26,ro,0x0,,
,GPIO_25,25,ro,0x0,,
,GPIO_24,24,ro,0x0,,
,GPIO_23,23,ro,0x0,,
,GPIO_22,22,ro,0x0,,
,GPIO_21,21,ro,0x0,,
,GPIO_20,20,ro,0x0,,
,GPIO_19,19,ro,0x0,,
,GPIO_18,18,ro,0x0,,
,GPIO_17,17,ro,0x0,,
,GPIO_16,16,ro,0x0,,
,GPIO_15,15,ro,0x0,,
,GPIO_14,14,ro,0x0,,
,GPIO_13,13,ro,0x0,,
,GPIO_12,12,ro,0x0,,
,GPIO_11,11,ro,0x0,,
,GPIO_10,10,ro,0x0,,
,GPIO_9,9,ro,0x0,,
,GPIO_8,8,ro,0x0,,
,GPIO_7,7,ro,0x0,,
,GPIO_6,6,ro,0x0,,
,GPIO_5,5,ro,0x0,,
,GPIO_4,4,ro,0x0,,
,GPIO_3,3,ro,0x0,,
,GPIO_2,2,ro,0x0,,
,GPIO_1,1,ro,0x0,,
,GPIO_0,0,ro,0x0,,
C2H_GPIO_13_REG,,,,,To monitor 32-bit GPIO from FPGA,
,GPIO_31,31,ro,0x0,,
,GPIO_30,30,ro,0x0,,
,GPIO_29,29,ro,0x0,,
,GPIO_28,28,ro,0x0,,
,GPIO_27,27,ro,0x0,,
,GPIO_26,26,ro,0x0,,
,GPIO_25,25,ro,0x0,,
,GPIO_24,24,ro,0x0,,
,GPIO_23,23,ro,0x0,,
,GPIO_22,22,ro,0x0,,
,GPIO_21,21,ro,0x0,,
,GPIO_20,20,ro,0x0,,
,GPIO_19,19,ro,0x0,,
,GPIO_18,18,ro,0x0,,
,GPIO_17,17,ro,0x0,,
,GPIO_16,16,ro,0x0,,
,GPIO_15,15,ro,0x0,,
,GPIO_14,14,ro,0x0,,
,GPIO_13,13,ro,0x0,,
,GPIO_12,12,ro,0x0,,
,GPIO_11,11,ro,0x0,,
,GPIO_10,10,ro,0x0,,
,GPIO_9,9,ro,0x0,,
,GPIO_8,8,ro,0x0,,
,GPIO_7,7,ro,0x0,,
,GPIO_6,6,ro,0x0,,
,GPIO_5,5,ro,0x0,,
,GPIO_4,4,ro,0x0,,
,GPIO_3,3,ro,0x0,,
,GPIO_2,2,ro,0x0,,
,GPIO_1,1,ro,0x0,,
,GPIO_0,0,ro,0x0,,
C2H_GPIO_14_REG,,,,,To monitor 32-bit GPIO from FPGA,
,GPIO_31,31,ro,0x0,,
,GPIO_30,30,ro,0x0,,
,GPIO_29,29,ro,0x0,,
,GPIO_28,28,ro,0x0,,
,GPIO_27,27,ro,0x0,,
,GPIO_26,26,ro,0x0,,
,GPIO_25,25,ro,0x0,,
,GPIO_24,24,ro,0x0,,
,GPIO_23,23,ro,0x0,,
,GPIO_22,22,ro,0x0,,
,GPIO_21,21,ro,0x0,,
,GPIO_20,20,ro,0x0,,
,GPIO_19,19,ro,0x0,,
,GPIO_18,18,ro,0x0,,
,GPIO_17,17,ro,0x0,,
,GPIO_16,16,ro,0x0,,
,GPIO_15,15,ro,0x0,,
,GPIO_14,14,ro,0x0,,
,GPIO_13,13,ro,0x0,,
,GPIO_12,12,ro,0x0,,
,GPIO_11,11,ro,0x0,,
,GPIO_10,10,ro,0x0,,
,GPIO_9,9,ro,0x0,,
,GPIO_8,8,ro,0x0,,
,GPIO_7,7,ro,0x0,,
,GPIO_6,6,ro,0x0,,
,GPIO_5,5,ro,0x0,,
,GPIO_4,4,ro,0x0,,
,GPIO_3,3,ro,0x0,,
,GPIO_2,2,ro,0x0,,
,GPIO_1,1,ro,0x0,,
,GPIO_0,0,ro,0x0,,
C2H_GPIO_15_REG,,,,,To monitor 32-bit GPIO from FPGA,
,GPIO_31,31,ro,0x0,,
,GPIO_30,30,ro,0x0,,
,GPIO_29,29,ro,0x0,,
,GPIO_28,28,ro,0x0,,
,GPIO_27,27,ro,0x0,,
,GPIO_26,26,ro,0x0,,
,GPIO_25,25,ro,0x0,,
,GPIO_24,24,ro,0x0,,
,GPIO_23,23,ro,0x0,,
,GPIO_22,22,ro,0x0,,
,GPIO_21,21,ro,0x0,,
,GPIO_20,20,ro,0x0,,
,GPIO_19,19,ro,0x0,,
,GPIO_18,18,ro,0x0,,
,GPIO_17,17,ro,0x0,,
,GPIO_16,16,ro,0x0,,
,GPIO_15,15,ro,0x0,,
,GPIO_14,14,ro,0x0,,
,GPIO_13,13,ro,0x0,,
,GPIO_12,12,ro,0x0,,
,GPIO_11,11,ro,0x0,,
,GPIO_10,10,ro,0x0,,
,GPIO_9,9,ro,0x0,,
,GPIO_8,8,ro,0x0,,
,GPIO_7,7,ro,0x0,,
,GPIO_6,6,ro,0x0,,
,GPIO_5,5,ro,0x0,,
,GPIO_4,4,ro,0x0,,
,GPIO_3,3,ro,0x0,,
,GPIO_2,2,ro,0x0,,
,GPIO_1,1,ro,0x0,,
,GPIO_0,0,ro,0x0,,
H2C_GPIO_0_REG,,,,,To send 32-bit GPIO from Host to  FPGA,
,GPIO_31,31,rw,0x0,,
,GPIO_30,30,rw,0x0,,
,GPIO_29,29,rw,0x0,,
,GPIO_28,28,rw,0x0,,
,GPIO_27,27,rw,0x0,,
,GPIO_26,26,rw,0x0,,
,GPIO_25,25,rw,0x0,,
,GPIO_24,24,rw,0x0,,
,GPIO_23,23,rw,0x0,,
,GPIO_22,22,rw,0x0,,
,GPIO_21,21,rw,0x0,,
,GPIO_20,20,rw,0x0,,
,GPIO_19,19,rw,0x0,,
,GPIO_18,18,rw,0x0,,
,GPIO_17,17,rw,0x0,,
,GPIO_16,16,rw,0x0,,
,GPIO_15,15,rw,0x0,,
,GPIO_14,14,rw,0x0,,
,GPIO_13,13,rw,0x0,,
,GPIO_12,12,rw,0x0,,
,GPIO_11,11,rw,0x0,,
,GPIO_10,10,rw,0x0,,
,GPIO_9,9,rw,0x0,,
,GPIO_8,8,rw,0x0,,
,GPIO_7,7,rw,0x0,,
,GPIO_6,6,rw,0x0,,
,GPIO_5,5,rw,0x0,,
,GPIO_4,4,rw,0x0,,
,GPIO_3,3,rw,0x0,,
,GPIO_2,2,rw,0x0,,
,GPIO_1,1,rw,0x0,,
,GPIO_0,0,rw,0x0,,
H2C_GPIO_1_REG,,,,,To send 32-bit GPIO from Host to  FPGA,
,GPIO_31,31,rw,0x0,,
,GPIO_30,30,rw,0x0,,
,GPIO_29,29,rw,0x0,,
,GPIO_28,28,rw,0x0,,
,GPIO_27,27,rw,0x0,,
,GPIO_26,26,rw,0x0,,
,GPIO_25,25,rw,0x0,,
,GPIO_24,24,rw,0x0,,
,GPIO_23,23,rw,0x0,,
,GPIO_22,22,rw,0x0,,
,GPIO_21,21,rw,0x0,,
,GPIO_20,20,rw,0x0,,
,GPIO_19,19,rw,0x0,,
,GPIO_18,18,rw,0x0,,
,GPIO_17,17,rw,0x0,,
,GPIO_16,16,rw,0x0,,
,GPIO_15,15,rw,0x0,,
,GPIO_14,14,rw,0x0,,
,GPIO_13,13,rw,0x0,,
,GPIO_12,12,rw,0x0,,
,GPIO_11,11,rw,0x0,,
,GPIO_10,10,rw,0x0,,
,GPIO_9,9,rw,0x0,,
,GPIO_8,8,rw,0x0,,
,GPIO_7,7,rw,0x0,,
,GPIO_6,6,rw,0x0,,
,GPIO_5,5,rw,0x0,,
,GPIO_4,4,rw,0x0,,
,GPIO_3,3,rw,0x0,,
,GPIO_2,2,rw,0x0,,
,GPIO_1,1,rw,0x0,,
,GPIO_0,0,rw,0x0,,
H2C_GPIO_2_REG,,,,,To send 32-bit GPIO from Host to  FPGA,
,GPIO_31,31,rw,0x0,,
,GPIO_30,30,rw,0x0,,
,GPIO_29,29,rw,0x0,,
,GPIO_28,28,rw,0x0,,
,GPIO_27,27,rw,0x0,,
,GPIO_26,26,rw,0x0,,
,GPIO_25,25,rw,0x0,,
,GPIO_24,24,rw,0x0,,
,GPIO_23,23,rw,0x0,,
,GPIO_22,22,rw,0x0,,
,GPIO_21,21,rw,0x0,,
,GPIO_20,20,rw,0x0,,
,GPIO_19,19,rw,0x0,,
,GPIO_18,18,rw,0x0,,
,GPIO_17,17,rw,0x0,,
,GPIO_16,16,rw,0x0,,
,GPIO_15,15,rw,0x0,,
,GPIO_14,14,rw,0x0,,
,GPIO_13,13,rw,0x0,,
,GPIO_12,12,rw,0x0,,
,GPIO_11,11,rw,0x0,,
,GPIO_10,10,rw,0x0,,
,GPIO_9,9,rw,0x0,,
,GPIO_8,8,rw,0x0,,
,GPIO_7,7,rw,0x0,,
,GPIO_6,6,rw,0x0,,
,GPIO_5,5,rw,0x0,,
,GPIO_4,4,rw,0x0,,
,GPIO_3,3,rw,0x0,,
,GPIO_2,2,rw,0x0,,
,GPIO_1,1,rw,0x0,,
,GPIO_0,0,rw,0x0,,
H2C_GPIO_3_REG,,,,,To send 32-bit GPIO from Host to  FPGA,
,GPIO_31,31,rw,0x0,,
,GPIO_30,30,rw,0x0,,
,GPIO_29,29,rw,0x0,,
,GPIO_28,28,rw,0x0,,
,GPIO_27,27,rw,0x0,,
,GPIO_26,26,rw,0x0,,
,GPIO_25,25,rw,0x0,,
,GPIO_24,24,rw,0x0,,
,GPIO_23,23,rw,0x0,,
,GPIO_22,22,rw,0x0,,
,GPIO_21,21,rw,0x0,,
,GPIO_20,20,rw,0x0,,
,GPIO_19,19,rw,0x0,,
,GPIO_18,18,rw,0x0,,
,GPIO_17,17,rw,0x0,,
,GPIO_16,16,rw,0x0,,
,GPIO_15,15,rw,0x0,,
,GPIO_14,14,rw,0x0,,
,GPIO_13,13,rw,0x0,,
,GPIO_12,12,rw,0x0,,
,GPIO_11,11,rw,0x0,,
,GPIO_10,10,rw,0x0,,
,GPIO_9,9,rw,0x0,,
,GPIO_8,8,rw,0x0,,
,GPIO_7,7,rw,0x0,,
,GPIO_6,6,rw,0x0,,
,GPIO_5,5,rw,0x0,,
,GPIO_4,4,rw,0x0,,
,GPIO_3,3,rw,0x0,,
,GPIO_2,2,rw,0x0,,
,GPIO_1,1,rw,0x0,,
,GPIO_0,0,rw,0x0,,
H2C_GPIO_4_REG,,,,,To send 32-bit GPIO from Host to  FPGA,
,GPIO_31,31,rw,0x0,,
,GPIO_30,30,rw,0x0,,
,GPIO_29,29,rw,0x0,,
,GPIO_28,28,rw,0x0,,
,GPIO_27,27,rw,0x0,,
,GPIO_26,26,rw,0x0,,
,GPIO_25,25,rw,0x0,,
,GPIO_24,24,rw,0x0,,
,GPIO_23,23,rw,0x0,,
,GPIO_22,22,rw,0x0,,
,GPIO_21,21,rw,0x0,,
,GPIO_20,20,rw,0x0,,
,GPIO_19,19,rw,0x0,,
,GPIO_18,18,rw,0x0,,
,GPIO_17,17,rw,0x0,,
,GPIO_16,16,rw,0x0,,
,GPIO_15,15,rw,0x0,,
,GPIO_14,14,rw,0x0,,
,GPIO_13,13,rw,0x0,,
,GPIO_12,12,rw,0x0,,
,GPIO_11,11,rw,0x0,,
,GPIO_10,10,rw,0x0,,
,GPIO_9,9,rw,0x0,,
,GPIO_8,8,rw,0x0,,
,GPIO_7,7,rw,0x0,,
,GPIO_6,6,rw,0x0,,
,GPIO_5,5,rw,0x0,,
,GPIO_4,4,rw,0x0,,
,GPIO_3,3,rw,0x0,,
,GPIO_2,2,rw,0x0,,
,GPIO_1,1,rw,0x0,,
,GPIO_0,0,rw,0x0,,
H2C_GPIO_5_REG,,,,,To send 32-bit GPIO from Host to  FPGA,
,GPIO_31,31,rw,0x0,,
,GPIO_30,30,rw,0x0,,
,GPIO_29,29,rw,0x0,,
,GPIO_28,28,rw,0x0,,
,GPIO_27,27,rw,0x0,,
,GPIO_26,26,rw,0x0,,
,GPIO_25,25,rw,0x0,,
,GPIO_24,24,rw,0x0,,
,GPIO_23,23,rw,0x0,,
,GPIO_22,22,rw,0x0,,
,GPIO_21,21,rw,0x0,,
,GPIO_20,20,rw,0x0,,
,GPIO_19,19,rw,0x0,,
,GPIO_18,18,rw,0x0,,
,GPIO_17,17,rw,0x0,,
,GPIO_16,16,rw,0x0,,
,GPIO_15,15,rw,0x0,,
,GPIO_14,14,rw,0x0,,
,GPIO_13,13,rw,0x0,,
,GPIO_12,12,rw,0x0,,
,GPIO_11,11,rw,0x0,,
,GPIO_10,10,rw,0x0,,
,GPIO_9,9,rw,0x0,,
,GPIO_8,8,rw,0x0,,
,GPIO_7,7,rw,0x0,,
,GPIO_6,6,rw,0x0,,
,GPIO_5,5,rw,0x0,,
,GPIO_4,4,rw,0x0,,
,GPIO_3,3,rw,0x0,,
,GPIO_2,2,rw,0x0,,
,GPIO_1,1,rw,0x0,,
,GPIO_0,0,rw,0x0,,
H2C_GPIO_6_REG,,,,,To send 32-bit GPIO from Host to  FPGA,
,GPIO_31,31,rw,0x0,,
,GPIO_30,30,rw,0x0,,
,GPIO_29,29,rw,0x0,,
,GPIO_28,28,rw,0x0,,
,GPIO_27,27,rw,0x0,,
,GPIO_26,26,rw,0x0,,
,GPIO_25,25,rw,0x0,,
,GPIO_24,24,rw,0x0,,
,GPIO_23,23,rw,0x0,,
,GPIO_22,22,rw,0x0,,
,GPIO_21,21,rw,0x0,,
,GPIO_20,20,rw,0x0,,
,GPIO_19,19,rw,0x0,,
,GPIO_18,18,rw,0x0,,
,GPIO_17,17,rw,0x0,,
,GPIO_16,16,rw,0x0,,
,GPIO_15,15,rw,0x0,,
,GPIO_14,14,rw,0x0,,
,GPIO_13,13,rw,0x0,,
,GPIO_12,12,rw,0x0,,
,GPIO_11,11,rw,0x0,,
,GPIO_10,10,rw,0x0,,
,GPIO_9,9,rw,0x0,,
,GPIO_8,8,rw,0x0,,
,GPIO_7,7,rw,0x0,,
,GPIO_6,6,rw,0x0,,
,GPIO_5,5,rw,0x0,,
,GPIO_4,4,rw,0x0,,
,GPIO_3,3,rw,0x0,,
,GPIO_2,2,rw,0x0,,
,GPIO_1,1,rw,0x0,,
,GPIO_0,0,rw,0x0,,
H2C_GPIO_7_REG,,,,,To send 32-bit GPIO from Host to  FPGA,
,GPIO_31,31,rw,0x0,,
,GPIO_30,30,rw,0x0,,
,GPIO_29,29,rw,0x0,,
,GPIO_28,28,rw,0x0,,
,GPIO_27,27,rw,0x0,,
,GPIO_26,26,rw,0x0,,
,GPIO_25,25,rw,0x0,,
,GPIO_24,24,rw,0x0,,
,GPIO_23,23,rw,0x0,,
,GPIO_22,22,rw,0x0,,
,GPIO_21,21,rw,0x0,,
,GPIO_20,20,rw,0x0,,
,GPIO_19,19,rw,0x0,,
,GPIO_18,18,rw,0x0,,
,GPIO_17,17,rw,0x0,,
,GPIO_16,16,rw,0x0,,
,GPIO_15,15,rw,0x0,,
,GPIO_14,14,rw,0x0,,
,GPIO_13,13,rw,0x0,,
,GPIO_12,12,rw,0x0,,
,GPIO_11,11,rw,0x0,,
,GPIO_10,10,rw,0x0,,
,GPIO_9,9,rw,0x0,,
,GPIO_8,8,rw,0x0,,
,GPIO_7,7,rw,0x0,,
,GPIO_6,6,rw,0x0,,
,GPIO_5,5,rw,0x0,,
,GPIO_4,4,rw,0x0,,
,GPIO_3,3,rw,0x0,,
,GPIO_2,2,rw,0x0,,
,GPIO_1,1,rw,0x0,,
,GPIO_0,0,rw,0x0,,
H2C_GPIO_8_REG,,,,,To send 32-bit GPIO from Host to  FPGA,
,GPIO_31,31,rw,0x0,,
,GPIO_30,30,rw,0x0,,
,GPIO_29,29,rw,0x0,,
,GPIO_28,28,rw,0x0,,
,GPIO_27,27,rw,0x0,,
,GPIO_26,26,rw,0x0,,
,GPIO_25,25,rw,0x0,,
,GPIO_24,24,rw,0x0,,
,GPIO_23,23,rw,0x0,,
,GPIO_22,22,rw,0x0,,
,GPIO_21,21,rw,0x0,,
,GPIO_20,20,rw,0x0,,
,GPIO_19,19,rw,0x0,,
,GPIO_18,18,rw,0x0,,
,GPIO_17,17,rw,0x0,,
,GPIO_16,16,rw,0x0,,
,GPIO_15,15,rw,0x0,,
,GPIO_14,14,rw,0x0,,
,GPIO_13,13,rw,0x0,,
,GPIO_12,12,rw,0x0,,
,GPIO_11,11,rw,0x0,,
,GPIO_10,10,rw,0x0,,
,GPIO_9,9,rw,0x0,,
,GPIO_8,8,rw,0x0,,
,GPIO_7,7,rw,0x0,,
,GPIO_6,6,rw,0x0,,
,GPIO_5,5,rw,0x0,,
,GPIO_4,4,rw,0x0,,
,GPIO_3,3,rw,0x0,,
,GPIO_2,2,rw,0x0,,
,GPIO_1,1,rw,0x0,,
,GPIO_0,0,rw,0x0,,
H2C_GPIO_9_REG,,,,,To send 32-bit GPIO from Host to  FPGA,
,GPIO_31,31,rw,0x0,,
,GPIO_30,30,rw,0x0,,
,GPIO_29,29,rw,0x0,,
,GPIO_28,28,rw,0x0,,
,GPIO_27,27,rw,0x0,,
,GPIO_26,26,rw,0x0,,
,GPIO_25,25,rw,0x0,,
,GPIO_24,24,rw,0x0,,
,GPIO_23,23,rw,0x0,,
,GPIO_22,22,rw,0x0,,
,GPIO_21,21,rw,0x0,,
,GPIO_20,20,rw,0x0,,
,GPIO_19,19,rw,0x0,,
,GPIO_18,18,rw,0x0,,
,GPIO_17,17,rw,0x0,,
,GPIO_16,16,rw,0x0,,
,GPIO_15,15,rw,0x0,,
,GPIO_14,14,rw,0x0,,
,GPIO_13,13,rw,0x0,,
,GPIO_12,12,rw,0x0,,
,GPIO_11,11,rw,0x0,,
,GPIO_10,10,rw,0x0,,
,GPIO_9,9,rw,0x0,,
,GPIO_8,8,rw,0x0,,
,GPIO_7,7,rw,0x0,,
,GPIO_6,6,rw,0x0,,
,GPIO_5,5,rw,0x0,,
,GPIO_4,4,rw,0x0,,
,GPIO_3,3,rw,0x0,,
,GPIO_2,2,rw,0x0,,
,GPIO_1,1,rw,0x0,,
,GPIO_0,0,rw,0x0,,
H2C_GPIO_10_REG,,,,,To send 32-bit GPIO from Host to  FPGA,
,GPIO_31,31,rw,0x0,,
,GPIO_30,30,rw,0x0,,
,GPIO_29,29,rw,0x0,,
,GPIO_28,28,rw,0x0,,
,GPIO_27,27,rw,0x0,,
,GPIO_26,26,rw,0x0,,
,GPIO_25,25,rw,0x0,,
,GPIO_24,24,rw,0x0,,
,GPIO_23,23,rw,0x0,,
,GPIO_22,22,rw,0x0,,
,GPIO_21,21,rw,0x0,,
,GPIO_20,20,rw,0x0,,
,GPIO_19,19,rw,0x0,,
,GPIO_18,18,rw,0x0,,
,GPIO_17,17,rw,0x0,,
,GPIO_16,16,rw,0x0,,
,GPIO_15,15,rw,0x0,,
,GPIO_14,14,rw,0x0,,
,GPIO_13,13,rw,0x0,,
,GPIO_12,12,rw,0x0,,
,GPIO_11,11,rw,0x0,,
,GPIO_10,10,rw,0x0,,
,GPIO_9,9,rw,0x0,,
,GPIO_8,8,rw,0x0,,
,GPIO_7,7,rw,0x0,,
,GPIO_6,6,rw,0x0,,
,GPIO_5,5,rw,0x0,,
,GPIO_4,4,rw,0x0,,
,GPIO_3,3,rw,0x0,,
,GPIO_2,2,rw,0x0,,
,GPIO_1,1,rw,0x0,,
,GPIO_0,0,rw,0x0,,
H2C_GPIO_11_REG,,,,,To send 32-bit GPIO from Host to  FPGA,
,GPIO_31,31,rw,0x0,,
,GPIO_30,30,rw,0x0,,
,GPIO_29,29,rw,0x0,,
,GPIO_28,28,rw,0x0,,
,GPIO_27,27,rw,0x0,,
,GPIO_26,26,rw,0x0,,
,GPIO_25,25,rw,0x0,,
,GPIO_24,24,rw,0x0,,
,GPIO_23,23,rw,0x0,,
,GPIO_22,22,rw,0x0,,
,GPIO_21,21,rw,0x0,,
,GPIO_20,20,rw,0x0,,
,GPIO_19,19,rw,0x0,,
,GPIO_18,18,rw,0x0,,
,GPIO_17,17,rw,0x0,,
,GPIO_16,16,rw,0x0,,
,GPIO_15,15,rw,0x0,,
,GPIO_14,14,rw,0x0,,
,GPIO_13,13,rw,0x0,,
,GPIO_12,12,rw,0x0,,
,GPIO_11,11,rw,0x0,,
,GPIO_10,10,rw,0x0,,
,GPIO_9,9,rw,0x0,,
,GPIO_8,8,rw,0x0,,
,GPIO_7,7,rw,0x0,,
,GPIO_6,6,rw,0x0,,
,GPIO_5,5,rw,0x0,,
,GPIO_4,4,rw,0x0,,
,GPIO_3,3,rw,0x0,,
,GPIO_2,2,rw,0x0,,
,GPIO_1,1,rw,0x0,,
,GPIO_0,0,rw,0x0,,
H2C_GPIO_12_REG,,,,,To send 32-bit GPIO from Host to  FPGA,
,GPIO_31,31,rw,0x0,,
,GPIO_30,30,rw,0x0,,
,GPIO_29,29,rw,0x0,,
,GPIO_28,28,rw,0x0,,
,GPIO_27,27,rw,0x0,,
,GPIO_26,26,rw,0x0,,
,GPIO_25,25,rw,0x0,,
,GPIO_24,24,rw,0x0,,
,GPIO_23,23,rw,0x0,,
,GPIO_22,22,rw,0x0,,
,GPIO_21,21,rw,0x0,,
,GPIO_20,20,rw,0x0,,
,GPIO_19,19,rw,0x0,,
,GPIO_18,18,rw,0x0,,
,GPIO_17,17,rw,0x0,,
,GPIO_16,16,rw,0x0,,
,GPIO_15,15,rw,0x0,,
,GPIO_14,14,rw,0x0,,
,GPIO_13,13,rw,0x0,,
,GPIO_12,12,rw,0x0,,
,GPIO_11,11,rw,0x0,,
,GPIO_10,10,rw,0x0,,
,GPIO_9,9,rw,0x0,,
,GPIO_8,8,rw,0x0,,
,GPIO_7,7,rw,0x0,,
,GPIO_6,6,rw,0x0,,
,GPIO_5,5,rw,0x0,,
,GPIO_4,4,rw,0x0,,
,GPIO_3,3,rw,0x0,,
,GPIO_2,2,rw,0x0,,
,GPIO_1,1,rw,0x0,,
,GPIO_0,0,rw,0x0,,
H2C_GPIO_13_REG,,,,,To send 32-bit GPIO from Host to  FPGA,
,GPIO_31,31,rw,0x0,,
,GPIO_30,30,rw,0x0,,
,GPIO_29,29,rw,0x0,,
,GPIO_28,28,rw,0x0,,
,GPIO_27,27,rw,0x0,,
,GPIO_26,26,rw,0x0,,
,GPIO_25,25,rw,0x0,,
,GPIO_24,24,rw,0x0,,
,GPIO_23,23,rw,0x0,,
,GPIO_22,22,rw,0x0,,
,GPIO_21,21,rw,0x0,,
,GPIO_20,20,rw,0x0,,
,GPIO_19,19,rw,0x0,,
,GPIO_18,18,rw,0x0,,
,GPIO_17,17,rw,0x0,,
,GPIO_16,16,rw,0x0,,
,GPIO_15,15,rw,0x0,,
,GPIO_14,14,rw,0x0,,
,GPIO_13,13,rw,0x0,,
,GPIO_12,12,rw,0x0,,
,GPIO_11,11,rw,0x0,,
,GPIO_10,10,rw,0x0,,
,GPIO_9,9,rw,0x0,,
,GPIO_8,8,rw,0x0,,
,GPIO_7,7,rw,0x0,,
,GPIO_6,6,rw,0x0,,
,GPIO_5,5,rw,0x0,,
,GPIO_4,4,rw,0x0,,
,GPIO_3,3,rw,0x0,,
,GPIO_2,2,rw,0x0,,
,GPIO_1,1,rw,0x0,,
,GPIO_0,0,rw,0x0,,
H2C_GPIO_14_REG,,,,,To send 32-bit GPIO from Host to  FPGA,
,GPIO_31,31,rw,0x0,,
,GPIO_30,30,rw,0x0,,
,GPIO_29,29,rw,0x0,,
,GPIO_28,28,rw,0x0,,
,GPIO_27,27,rw,0x0,,
,GPIO_26,26,rw,0x0,,
,GPIO_25,25,rw,0x0,,
,GPIO_24,24,rw,0x0,,
,GPIO_23,23,rw,0x0,,
,GPIO_22,22,rw,0x0,,
,GPIO_21,21,rw,0x0,,
,GPIO_20,20,rw,0x0,,
,GPIO_19,19,rw,0x0,,
,GPIO_18,18,rw,0x0,,
,GPIO_17,17,rw,0x0,,
,GPIO_16,16,rw,0x0,,
,GPIO_15,15,rw,0x0,,
,GPIO_14,14,rw,0x0,,
,GPIO_13,13,rw,0x0,,
,GPIO_12,12,rw,0x0,,
,GPIO_11,11,rw,0x0,,
,GPIO_10,10,rw,0x0,,
,GPIO_9,9,rw,0x0,,
,GPIO_8,8,rw,0x0,,
,GPIO_7,7,rw,0x0,,
,GPIO_6,6,rw,0x0,,
,GPIO_5,5,rw,0x0,,
,GPIO_4,4,rw,0x0,,
,GPIO_3,3,rw,0x0,,
,GPIO_2,2,rw,0x0,,
,GPIO_1,1,rw,0x0,,
,GPIO_0,0,rw,0x0,,
H2C_GPIO_15_REG,,,,,To send 32-bit GPIO from Host to  FPGA,
,GPIO_31,31,rw,0x0,,
,GPIO_30,30,rw,0x0,,
,GPIO_29,29,rw,0x0,,
,GPIO_28,28,rw,0x0,,
,GPIO_27,27,rw,0x0,,
,GPIO_26,26,rw,0x0,,
,GPIO_25,25,rw,0x0,,
,GPIO_24,24,rw,0x0,,
,GPIO_23,23,rw,0x0,,
,GPIO_22,22,rw,0x0,,
,GPIO_21,21,rw,0x0,,
,GPIO_20,20,rw,0x0,,
,GPIO_19,19,rw,0x0,,
,GPIO_18,18,rw,0x0,,
,GPIO_17,17,rw,0x0,,
,GPIO_16,16,rw,0x0,,
,GPIO_15,15,rw,0x0,,
,GPIO_14,14,rw,0x0,,
,GPIO_13,13,rw,0x0,,
,GPIO_12,12,rw,0x0,,
,GPIO_11,11,rw,0x0,,
,GPIO_10,10,rw,0x0,,
,GPIO_9,9,rw,0x0,,
,GPIO_8,8,rw,0x0,,
,GPIO_7,7,rw,0x0,,
,GPIO_6,6,rw,0x0,,
,GPIO_5,5,rw,0x0,,
,GPIO_4,4,rw,0x0,,
,GPIO_3,3,rw,0x0,,
,GPIO_2,2,rw,0x0,,
,GPIO_1,1,rw,0x0,,
,GPIO_0,0,rw,0x0,,
BRIDGE_CONFIG_REG,,,,,,
,RESERVED,31:13:00,ro,NA,,
,EXTEND_WSTRB,12,rw,0x0,"EXTEND_WSTRB : 
0: wstrbs are reprented as per protocol. i.e. 1-bit of wstrb is valid for 1 Byte of wdata.
1 : 1-bit of wstrb is valid for 1-bit of wdata.",
,ID_WIDTH , 11:4,ro,NA,ID_WIDTH : value of AXI-ID width,
,RESERVED,3,ro,NA,,
,DATA_WIDTH, 2:0,ro,NA,"DATA_WIDTH : AXI-data width

0x0 : 8-bit

0x1 : 16-bit

0x2 : 32-bit

0x3 : 64-bit

0x4 : 128-bit

0x5 : 256-bit

0x6 : 512-bit

0x7 : 1024",
INTR_STATUS_REG,,,,,,
,RESERVED, 31:11,ro,0x0,,
,SN_DATA_FIFO_NONEMPTY,10,ro,0x0,This field is set if SN_DATA_FIFO_FILL_LEVEL_REG is not zero.,
,SN_RESP_FIFO_NONEMPTY,9,ro,0x0,This field is set if SN_RESP_FIFO_FILL_LEVEL_REG is not zero.,
,SN_REQ_COMP,8,ro,0x0,This field is set if any ofï¿½SN_REQ_INTR_COMP_STATUS_REG bits are set.,
,WR_RESP_COMP,7,ro,0x0,This field is set if any ofï¿½WR_RESP_INTR_COMP_STATUS_REG bits are set.,
,WR_REQ_FIFO_NONEMPTY,6,ro,0x0,This field is set if WR_REQ_FIFO_FILL_LEVEL_REG is not zero.,
,RD_RESP_COMP,5,ro,0x0,This field is set if any ofï¿½RD_RESP_INTR_COMP_STATUS_REG bits are set.,
,RD_REQ_FIFO_NONEMPTY,4,ro,0x0,This field is set if RD_REQ_FIFO_FILL_LEVEL_REG is not zero.,
,RESERVED,3,ro,0x0,,
,C2H,2,ro,0x0,"C2Hï¿½ :ï¿½This field is set if any ofï¿½INTR_C2H_STATUS_REG bits are set.ï¿½
SW to read INTR_C2H_STATUS_REG to decode which interrupt occurred.",
,ERROR,1,ro,0x0,"ERROR: Interrupt for system error scenario. 
These are not related to any particular transaction.
 SW to read INTR_ERROR_STATUS_REGï¿½to decode type of error.ï¿½",NOTE : The only way to clear ERROR field is to issue SRST of CONFIG_REG.
,RESERVED,0,ro,0x0,,
INTR_ERROR_STATUS_REG,,,,,,
,RESERVED, 31:3,ro,0x0,,
   ,ERR_2,2,ro,0x0,"ERR_2 : This bit indicates a Decode error on the S-AXI interface.
 In case SW tries to access an address which is not implemented in POSH HW Bridge,
 decode error will be updated in this bit. No AXI decode error will be generated 
to avoid system level PCie error.ï¿½
0 : No error
1 : Error
",
,ERR_1,1,ro,0x0,"ERR_1 :Error at XDMA slave interface  (this error is only valid for mode-1)

0 : No error

1 : Error",
,ERR_0,0,ro,0x0,"ERR_0:   Error from ACE interface.

0 : No error

1 : Error",
INTR_ERROR_CLEAR_REG,,,,,Writing a 1 to this bits clears the respective bit in the INTR_ERROR_STATUS_REG.,
,RESERVED, 31:3,w1c,0x0,,
,CLR_ERR_2,2,w1c,0x0,,
,CLR_ERR_1,1,w1c,0x0,,
,CLR_ERR_0,0,w1c,0x0,,
INTR_ERROR_ENABLE_REG,,,,,,
,RESERVED, 31:3,ro,0x0,,
,EN_ERR_2,2,ro,0x0,"EN_ERR_2 : 

1 = enables interrupt generation if  ERR_2 bit in INTR_ERROR_STATUS_REG s set
0 = disables interrupt generation",
,EN_ERR_1,1,ro,0x0,"EN_ERR_1 : 

1 = enables interrupt generation if  ERR_1 bit in INTR_ERROR_STATUS_REG s set
0 = disables interrupt generation",
,EN_ERR_0,0,ro,0x0,"EN_ERR_0 : 

1 = enables interrupt generation if  ERR_0 bit in INTR_ERROR_STATUS_REG s set
0 = disables interrupt generation",
BRIDGE_RD_USER_CONFIG_REG,,,,,,
,RESERVED,31:20:00,ro,NA,,
,RUSER_WIDTH ,19:10,ro,NA,RUSER_WIDTH : value of the AXI-ruser widthï¿½,
,ARUSER_WIDTH ,9:00,ro,NA,ARUSER_WIDTH : value of the AXI-aruser widthï¿½,
BRIDGE_WR_USER_CONFIG_REG,,,,,,
,RESERVED,31:30:00,ro,NA,,
,BUSER_WIDTH ,29:20:00,ro,NA,BUSER_WIDTH : value of the AXI-buser widthï¿½,
,WUSER_WIDTH ,19:10,ro,NA,WUSER_WIDTH : value of the AXI-wuser widthï¿½,
,AWUSER_WIDTH ,9:00,ro,NA,AWUSER_WIDTH : value of the AXI-awuser widthï¿½,
RD_MAX_DESC_REG,,,,,,
,RESERVED,31:16:00,ro,NA,,
,RESP_MAX_DESC,15:08,ro,NA,Maximum number of response descriptor,
,REQ_MAX_DESC,7:00,ro,NA,Maximum number of request descriptor,
WR_MAX_DESC_REG,,,,,,
,RESERVED,31:16:00,ro,NA,,
,RESP_MAX_DESC,15:08,ro,NA,Maximum number of response descriptor,
,REQ_MAX_DESC,7:00,ro,NA,Maximum number of request descriptor,
SN_MAX_DESC_REG,,,,,,
,RESERVED,31:24:00,ro,NA,,
,DATA_MAX_DESC,23:16,ro,NA,Maximum number of data descriptor,
,RESP_MAX_DESC,15:08,ro,NA,Maximum number of response descriptor,
,REQ_MAX_DESC,7:00,ro,NA,Maximum number of request descriptor,
RD_REQ_FREE_DESC_REG,,,,,,
,RESERVED, 31:16,W1SRAZ,0x0,,
,DESC, 15:0,W1SRAZ,0x0,DESC: SW to write in corresponding Bit to set avail descritor to HW. Read to this register will always return 0.,
RD_REQ_FIFO_POP_DESC_REG,,,,,"Reading to this register will pop out one descriptor from FIFO. The popped out descriptor is returned as the read value of this register.
Depth of the fifo is MAX_DESC.",
,VALID,31,RO,0x0,"If SW reads an empty fifo, valid bit is 0. Otherwise 1.",
,RESERVED, 30:4,RO,0x0,,
,DESC_INDEX, 3:0,RO,0x0,The descriptor index popped out from the FIFO.,
RD_REQ_FIFO_FILL_LEVEL_REG,,,,,,
,RESERVED, 31:5,RO,0x0,,
,FILL, 4:0,RO,0x0,Number of elements present in FIFO at time of reading register.,
RD_RESP_FIFO_PUSH_DESC_REG,,,,,"Reading to this register will push one descriptor to FIFO.  Read to this register will always return 0.
Depth of the fifo is MAX_DESC.",
,VALID,31,W1SRAZ,0x0,SW must write '1' to this register. Otherwise descriptor will not be pushed into FIFO.,
,RESERVED, 30:4,W1SRAZ,0x0,,
,DESC_INDEX, 3:0,W1SRAZ,0x0,The descriptor index to be pushed to the FIFO.,
RD_RESP_FIFO_FREE_LEVEL_REG,,,,,,
,RESERVED, 31:5,RO,0x0,,
,FREE, 4:0,RO,0x10,Free space in FIFO at time of reading register.,
RD_RESP_INTR_COMP_STATUS_REG,,,,0x0,,
,RESERVED, 31:16,RO,0x0,,
,COMP, 15:0,RO,0x0,Each bit represents completion. eg. bit 0 for completion is for descriptor 0.,
RD_RESP_INTR_COMP_CLEAR_REG,,,,0x0,,
,RESERVED, 31:16,W1SRAZ,0x0,,
,CLR_COMP, 15:0,W1SRAZ,0x0,Writing a 1 to this bits clears the respective bit in the intrrupt comp status register. Read to this register will always return 0.,
RD_RESP_INTR_COMP_ENABLE_REG,,,,0x0,,
,RESERVED, 31:16,RW,0x0,,
,EN_COMP, 15:0,RW,0x0,"EN_COMP: 

1 = enables interrupt generation if  COMP bit in interrupt comp status register is set
0 = disables interrupt generation",
WR_REQ_FREE_DESC_REG,,,,,,
,RESERVED, 31:16,W1SRAZ,0x0,,
,DESC, 15:0,W1SRAZ,0x0,DESC: SW to write in corresponding Bit to set avail descritor to HW. Read to this register will always return 0.,
WR_REQ_FIFO_POP_DESC_REG,,,,,"Reading to this register will pop out one descriptor from FIFO. The popped out descriptor is returned as the read value of this register.
Depth of the fifo is MAX_DESC.",
,VALID,31,RO,0x0,"If SW reads an empty fifo, valid bit is 0. Otherwise 1.",
,RESERVED, 30:4,RO,0x0,,
,DESC_INDEX, 3:0,RO,0x0,The descriptor index popped out from the FIFO.,
WR_REQ_FIFO_FILL_LEVEL_REG,,,,,,
,RESERVED, 31:5,RO,0x0,,
,FILL, 4:0,RO,0x0,Number of elements present in FIFO at time of reading register.,
WR_RESP_FIFO_PUSH_DESC_REG,,,,,"Reading to this register will push one descriptor to FIFO.  Read to this register will always return 0.
Depth of the fifo is MAX_DESC.",
,VALID,31,W1SRAZ,0x0,SW must write '1' to this register. Otherwise descriptor will not be pushed into FIFO.,
,RESERVED, 30:4,W1SRAZ,0x0,,
,DESC_INDEX, 3:0,W1SRAZ,0x0,The descriptor index to be pushed to the FIFO.,
WR_RESP_FIFO_FREE_LEVEL_REG,,,,,,
,RESERVED, 31:5,RO,0x0,,
,FREE, 4:0,RO,0x10,Free space in FIFO at time of reading register.,
WR_RESP_INTR_COMP_STATUS_REG,,,,0x0,,
,RESERVED, 31:16,RO,0x0,,
,COMP, 15:0,RO,0x0,Each bit represents completion. eg. bit 0 for completion is for descriptor 0.,
WR_RESP_INTR_COMP_CLEAR_REG,,,,0x0,,
,RESERVED, 31:16,W1SRAZ,0x0,,
,CLR_COMP, 15:0,W1SRAZ,0x0,Writing a 1 to this bits clears the respective bit in the intrrupt comp status register. Read to this register will always return 0.,
WR_RESP_INTR_COMP_ENABLE_REG,,,,0x0,,
,RESERVED, 31:16,RW,0x0,,
,EN_COMP, 15:0,RW,0x0,"EN_COMP: 

1 = enables interrupt generation if  COMP bit in interrupt comp status register is set
0 = disables interrupt generation",
SN_REQ_FIFO_PUSH_DESC_REG,,,,,"Reading to this register will push one descriptor to FIFO.  Read to this register will always return 0.
Depth of the fifo is MAX_DESC.",
,VALID,31,W1SRAZ,0x0,SW must write '1' to this register. Otherwise descriptor will not be pushed into FIFO.,
,RESERVED, 30:4,W1SRAZ,0x0,,
,DESC_INDEX, 3:0,W1SRAZ,0x0,The descriptor index to be pushed to the FIFO.,
SN_REQ_FIFO_FREE_LEVEL_REG,,,,,,
,RESERVED, 31:5,RO,0x0,,
,FREE, 4:0,RO,0x10,Free space in FIFO at time of reading register.,
SN_REQ_INTR_COMP_STATUS_REG,,,,0x0,,
,RESERVED, 31:16,RO,0x0,,
,COMP, 15:0,RO,0x0,Each bit represents completion. eg. bit 0 for completion is for descriptor 0.,
SN_REQ_INTR_COMP_CLEAR_REG,,,,0x0,,
,RESERVED, 31:16,W1SRAZ,0x0,,
,CLR_COMP, 15:0,W1SRAZ,0x0,Writing a 1 to this bits clears the respective bit in the intrrupt comp status register. Read to this register will always return 0.,
SN_REQ_INTR_COMP_ENABLE_REG,,,,0x0,,
,RESERVED, 31:16,RW,0x0,,
,EN_COMP, 15:0,RW,0x0,"EN_COMP: 

1 = enables interrupt generation if  COMP bit in interrupt comp status register is set
0 = disables interrupt generation",
SN_RESP_FREE_DESC_REG,,,,,,
,RESERVED, 31:16,W1SRAZ,0x0,,
,DESC, 15:0,W1SRAZ,0x0,DESC: SW to write in corresponding Bit to set avail descritor to HW. Read to this register will always return 0.,
SN_RESP_FIFO_POP_DESC_REG,,,,,"Reading to this register will pop out one descriptor from FIFO. The popped out descriptor is returned as the read value of this register.
Depth of the fifo is MAX_DESC.",
,VALID,31,RO,0x0,"If SW reads an empty fifo, valid bit is 0. Otherwise 1.",
,RESERVED, 30:4,RO,0x0,,
,DESC_INDEX, 3:0,RO,0x0,The descriptor index popped out from the FIFO.,
SN_RESP_FIFO_FILL_LEVEL_REG,,,,,,
,RESERVED, 31:5,RO,0x0,,
,FILL, 4:0,RO,0x0,Number of elements present in FIFO at time of reading register.,
SN_DATA_FREE_DESC_REG,,,,,,
,RESERVED, 31:16,W1SRAZ,0x0,,
,DESC, 15:0,W1SRAZ,0x0,DESC: SW to write in corresponding Bit to set avail descritor to HW. Read to this register will always return 0.,
SN_DATA_FIFO_POP_DESC_REG,,,,,"Reading to this register will pop out one descriptor from FIFO. The popped out descriptor is returned as the read value of this register.
Depth of the fifo is MAX_DESC.",
,VALID,31,RO,0x0,"If SW reads an empty fifo, valid bit is 0. Otherwise 1.",
,RESERVED, 30:4,RO,0x0,,
,DESC_INDEX, 3:0,RO,0x0,The descriptor index popped out from the FIFO.,
SN_DATA_FIFO_FILL_LEVEL_REG,,,,,,
,RESERVED, 31:5,RO,0x0,,
,FILL, 4:0,RO,0x0,Number of elements present in FIFO at time of reading register.,
INTR_FIFO_ENABLE_REG,,,,,,
,RESERVED, 31:4,RW,0x0,,
,EN_SN_DATA_FIFO_NONEMPTY,3,RW,0x0,Enables interrupt generation if SN_DATA_FIFO_FILL_LEVEL_REG is not zero.,
,EN_SN_RESP_FIFO_NONEMPTY,2,RW,,Enables interrupt generation if SN_RESP_FIFO_FILL_LEVEL_REG is not zero.,
,EN_WR_REQ_FIFO_NONEMPTY,1,RW,0x0,Enables interrupt generation WR_REQ_FIFO_FILL_LEVEL_REG is not zero.,
,EN_RD_REQ_FIFO_NONEMPTY,0,RW,0x0,Enables interrupt generation if RD_REQ_FIFO_FILL_LEVEL_REG is not zero.,
RD_REQ_DESC_N_TXN_TYPE_REG,,,,,,
,RESERVED, 31:0,ro,0x0,,
RD_REQ_DESC_N_SIZE_REG,,,,,,
,TXN_SIZE, 31:0,ro,0x10,"TXN_SIZE: Total number of Bytes to be transferred in a particular transaction.If user datawidth is represented in bits, then

     TXN_SIZE = (user datawidth) * (AXLEN+1) / (8)","Actual AXI-transaction size = (2^(AXSIZE)) * (AXLEN+1) . This size 

Maximum above size supported by ACE is 4 KB."
RD_REQ_DESC_N_AXSIZE_REG,,,,,,
,RESERVED,31:03:00,ro,0x0,,
,AXSIZE,2:00,ro,0x0,This is equivalent to AXSIZE in ACE protocol. The maximum number of bytes to transfer in each data transfer in transaction.ï¿½,
RD_REQ_DESC_N_ATTR_REG,,,,,,
,RESERVED, 31:28,ro,0x0,,
,AXSNOOP, 27:24,ro,0x0,RD case : [3:0],
,AXDOMAIN, 23:22,ro,0x0,,
,AXBAR, 21:20,ro,0x0,,
,RESERVED,19,ro,0x0,RD case : Reserved,
,AXREGION, 18:15,ro,0x0,,
,AXQOS, 14:11,ro,0x0,,
,AXPROT, 10:8,ro,0x0,,
,AXCACHE, 7:4,ro,0x0,,
,RESERVED,3,ro,,,
,AXLOCK,2,ro,0x0,,
,AXBURST, 1:0,ro,0x0,,
RD_REQ_DESC_N_AXADDR_0_REG,,,,,,
,ADDR, 31:0,ro,0x0,DUT address (araddr),
RD_REQ_DESC_N_AXADDR_1_REG,,,,,,
,ADDR, 31:0,ro,0x0,DUT address (araddr),
RD_REQ_DESC_N_AXADDR_2_REG,,,,,,
,ADDR, 31:0,ro,0x0,DUT address (araddr),
RD_REQ_DESC_N_AXADDR_3_REG,,,,,,
,ADDR, 31:0,ro,0x0,DUT address (araddr),
RD_REQ_DESC_N_AXID_0_REG,,,,,,
,AXID, 31:0,ro,0x0,AXI AXID (arid),
RD_REQ_DESC_N_AXID_1_REG,,,,,,
,AXID, 31:0,ro,0x0,AXI AXID (arid),
RD_REQ_DESC_N_AXID_2_REG,,,,,,
,AXID, 31:0,ro,0x0,AXI AXID (arid),
RD_REQ_DESC_N_AXID_3_REG,,,,,,
,AXID, 31:0,ro,0x0,AXI AXID (arid),
RD_REQ_DESC_N_AXUSER_0_REG,,,,,,
,AXUSER, 31:0,ro,0x0,AXI AXUSER (aruser), 31:0 
RD_REQ_DESC_N_AXUSER_1_REG,,,,,,
,AXUSER, 31:0,ro,0x0,AXI AXUSER (aruser), 63:32
RD_REQ_DESC_N_AXUSER_2_REG,,,,,,
,AXUSER, 31:0,ro,0x0,AXI AXUSER (aruser), 95:64
RD_REQ_DESC_N_AXUSER_3_REG,,,,,,
,AXUSER, 31:0,ro,0x0,AXI AXUSER (aruser), 127:96
RD_REQ_DESC_N_AXUSER_4_REG,,,,,,
,AXUSER, 31:0,ro,0x0,AXI AXUSER (aruser), 159:128
RD_REQ_DESC_N_AXUSER_5_REG,,,,,,
,AXUSER, 31:0,ro,0x0,AXI AXUSER (aruser), 191:160
RD_REQ_DESC_N_AXUSER_6_REG,,,,,,
,AXUSER, 31:0,ro,0x0,AXI AXUSER (aruser), 223:192
RD_REQ_DESC_N_AXUSER_7_REG,,,,,,
,AXUSER, 31:0,ro,0x0,AXI AXUSER (aruser), 255:224
RD_REQ_DESC_N_AXUSER_8_REG,,,,,,
,AXUSER, 31:0,ro,0x0,AXI AXUSER (aruser),255:224
RD_REQ_DESC_N_AXUSER_9_REG,,,,,,
,AXUSER, 31:0,ro,0x0,AXI AXUSER (aruser), 287:256
RD_REQ_DESC_N_AXUSER_10_REG,,,,,,
,AXUSER, 31:0,ro,0x0,AXI AXUSER (aruser), 319:288
RD_REQ_DESC_N_AXUSER_11_REG,,,,,,
,AXUSER, 31:0,ro,0x0,AXI AXUSER (aruser), 351:320
RD_REQ_DESC_N_AXUSER_12_REG,,,,,,
,AXUSER, 31:0,ro,0x0,AXI AXUSER (aruser), 383:352
RD_REQ_DESC_N_AXUSER_13_REG,,,,,,
,AXUSER, 31:0,ro,0x0,AXI AXUSER (aruser), 415:384
RD_REQ_DESC_N_AXUSER_14_REG,,,,,,
,AXUSER, 31:0,ro,0x0,AXI AXUSER (aruser), 447:416
RD_REQ_DESC_N_AXUSER_15_REG,, ,,,,
,AXUSER, 31:0,ro,0x0,AXI AXUSER (aruser), 511:480
RD_RESP_DESC_N_DATA_OFFSET_REG,,,,,,
,RESERVED, 31:14,rw,0x0,,
,ADDR, 13:0,rw,0x0,"For WR, offset addr of WDATA_RAM, WSTRB_RAM. For RD, offset addr of RDATA_RAM.",
RD_RESP_DESC_N_DATA_SIZE_REG,,,,,,
,SIZE, 31:0,rw,0x0,"SIZE: Total number of Bytes to be transferred in a particular transaction.If user datawidth is represented in bits, then

     SIZE = (user datawidth) * (AXLEN+1) / (8)","Actual AXI-transaction size = (2^(AXSIZE)) * (AXLEN+1) . This size 

Maximum above size supported by AXI is 4 KB."
RD_RESP_DESC_N_DATA_HOST_ADDR_0_REG,,,,,,
,ADDR, 31:0,rw,0x0,Host Buffer Address for ï¿½ RD DATA. NOTE: Host address should always be 4K Bytes aligned,
RD_RESP_DESC_N_DATA_HOST_ADDR_1_REG,,,,,,
,ADDR, 31:0,rw,0x0,Host Buffer Address for ï¿½ RD DATA. NOTE: Host address should always be 4K Bytes aligned,
RD_RESP_DESC_N_DATA_HOST_ADDR_2_REG,,,,,,
,ADDR, 31:0,rw,0x0,Host Buffer Address for ï¿½ RD DATA. NOTE: Host address should always be 4K Bytes aligned,
RD_RESP_DESC_N_DATA_HOST_ADDR_3_REG,,,,,,
,ADDR, 31:0,rw,0x0,Host Buffer Address for ï¿½ RD DATA. NOTE: Host address should always be 4K Bytes aligned,
RD_RESP_DESC_N_RESP_REG,,,,,,
,RESERVED, 31:5,rw,0x0,,
,RESP, 4:0,rw,0x0,RD case : [3:0],
RD_RESP_DESC_N_XID_0_REG,,,,,,
,XID, 31:0,rw,0x0,AXI XID (rid),
RD_RESP_DESC_N_XID_1_REG,,,,,,
,XID, 31:0,rw,0x0,AXI XID (rid),
RD_RESP_DESC_N_XID_2_REG,,,,,,
,XID, 31:0,rw,0x0,AXI XID (rid),
RD_RESP_DESC_N_XID_3_REG,,,,,,
,XID, 31:0,rw,0x0,AXI XID (rid),
RD_RESP_DESC_N_XUSER_0_REG,,,,,,
,XUSER, 31:0,rw,0x0,Only constant value of RUSER is supported per transaction., 31:0 
RD_RESP_DESC_N_XUSER_1_REG,,,,,,
,XUSER, 31:0,rw,0x0,Only constant value of RUSER is supported per transaction., 63:32
RD_RESP_DESC_N_XUSER_2_REG,,,,,,
,XUSER, 31:0,rw,0x0,Only constant value of RUSER is supported per transaction., 95:64
RD_RESP_DESC_N_XUSER_3_REG,, ,,,,
,XUSER, 31:0,rw,0x0,Only constant value of RUSER is supported per transaction., 127:96
RD_RESP_DESC_N_XUSER_4_REG,,,,,,
,XUSER, 31:0,rw,0x0,Only constant value of RUSER is supported per transaction., 159:128
RD_RESP_DESC_N_XUSER_5_REG,,,,,,
,XUSER, 31:0,rw,0x0,Only constant value of RUSER is supported per transaction., 191:160
RD_RESP_DESC_N_XUSER_6_REG,,,,,,
,XUSER, 31:0,rw,0x0,Only constant value of RUSER is supported per transaction., 223:192
RD_RESP_DESC_N_XUSER_7_REG,, ,,,,
,XUSER, 31:0,rw,0x0,Only constant value of RUSER is supported per transaction., 255:224
RD_RESP_DESC_N_XUSER_8_REG,,,,,,
,XUSER, 31:0,rw,0x0,Only constant value of RUSER is supported per transaction.,255:224
RD_RESP_DESC_N_XUSER_9_REG,,,,,,
,XUSER, 31:0,rw,0x0,Only constant value of RUSER is supported per transaction., 287:256
RD_RESP_DESC_N_XUSER_10_REG,,,,,,
,XUSER, 31:0,rw,0x0,Only constant value of RUSER is supported per transaction., 319:288
RD_RESP_DESC_N_XUSER_11_REG,, ,,,,
,XUSER, 31:0,rw,0x0,Only constant value of RUSER is supported per transaction., 351:320
RD_RESP_DESC_N_XUSER_12_REG,,,,,,
,XUSER, 31:0,rw,0x0,Only constant value of RUSER is supported per transaction., 383:352
RD_RESP_DESC_N_XUSER_13_REG,,,,,,
,XUSER, 31:0,rw,0x0,Only constant value of RUSER is supported per transaction., 415:384
RD_RESP_DESC_N_XUSER_14_REG,,,,,,
,XUSER, 31:0,rw,0x0,Only constant value of RUSER is supported per transaction., 447:416
RD_RESP_DESC_N_XUSER_15_REG,, ,,,,
,XUSER, 31:0,rw,0x0,Only constant value of RUSER is supported per transaction., 511:480
WR_REQ_DESC_N_TXN_TYPE_REG,,,,,,
,RESERVED, 31:2,ro,0x0,,
,WR_STRB,1,ro,0x0,"WR case : 
If WR_STRB bit of register DESC_N_TXN_TYPE_REG is 0, SW can assume all wstrbs as ï¿½logic highï¿½   
If WR_STRB bit of register DESC_N_TXN_TYPE_REG is 1, SW needs to read all wstrb in WSTRB_RAM. This is for cases of narrow transfers, unaligned transfers or any kind of wstrb holes(zeros).",
,RESERVED,0,ro,0x0,,
WR_REQ_DESC_N_SIZE_REG,,,,,,
,TXN_SIZE, 31:0,ro,0x10,"TXN_SIZE: Total number of Bytes received from DUT in a particular transaction.If user datawidth is represented in bits, then

     TXN_SIZE = (user datawidth) * (AXLEN+1) / (8)","Actual AXI-transaction size = (2^(AXSIZE)) * (AXLEN+1) . This size 

Maximum above size supported by AXI is 4 KB."
WR_REQ_DESC_N_DATA_OFFSET_REG,,,,,,
,RESERVED, 31:14,ro,0x0,,
,ADDR, 13:0,ro,0x0,"For WR, offset addr of WDATA_RAM, WSTRB_RAM.",
WR_REQ_DESC_N_DATA_HOST_ADDR_0_REG,,,,,,
,ADDR, 31:0,rw,0x0,Host Buffer Address for ï¿½WR  DATA. NOTE: Host address should always be 4K Bytes aligned,
WR_REQ_DESC_N_DATA_HOST_ADDR_1_REG,,,,,,
,ADDR, 31:0,rw,0x0,Host Buffer Address for ï¿½WR  DATA. NOTE: Host address should always be 4K Bytes aligned,
WR_REQ_DESC_N_DATA_HOST_ADDR_2_REG,,,,,,
,ADDR, 31:0,rw,0x0,Host Buffer Address for ï¿½WR  DATA. NOTE: Host address should always be 4K Bytes aligned,
WR_REQ_DESC_N_DATA_HOST_ADDR_3_REG,,,,,,
,ADDR, 31:0,rw,0x0,Host Buffer Address for ï¿½WR  DATA. NOTE: Host address should always be 4K Bytes aligned,
WR_REQ_DESC_N_WSTRB_HOST_ADDR_0_REG,,,,,,
,ADDR, 31:0,rw,0x0,Host Buffer Address for ï¿½WRSTRB. NOTE: Host address should always be 4K Bytes aligned,
WR_REQ_DESC_N_WSTRB_HOST_ADDR_1_REG,,,,,,
,ADDR, 31:0,rw,0x0,Host Buffer Address for ï¿½WRSTRB. NOTE: Host address should always be 4K Bytes aligned,
WR_REQ_DESC_N_WSTRB_HOST_ADDR_2_REG,,,,,,
,ADDR, 31:0,rw,0x0,Host Buffer Address for ï¿½WRSTRB. NOTE: Host address should always be 4K Bytes aligned,
WR_REQ_DESC_N_WSTRB_HOST_ADDR_3_REG,,,,,,
,ADDR, 31:0,rw,0x0,Host Buffer Address for ï¿½WRSTRB. NOTE: Host address should always be 4K Bytes aligned,
WR_REQ_DESC_N_AXSIZE_REG,,,,,,
,RESERVED,31:03:00,ro,0x0,,
,AXSIZE,2:00,ro,0x0,This is equivalent to AXSIZE in AXI protocol. The maximum number of bytes to transfer in each data transfer in transaction.ï¿½,
WR_REQ_DESC_N_ATTR_REG,,,,,,
,RESERVED, 31:28,ro,0x0,,
,AXSNOOP, 27:24,ro,0x0,WR case : [2:0],
,AXDOMAIN, 23:22,ro,0x0,,
,AXBAR, 21:20,ro,0x0,,
,AWUNIQUE,19,ro,0x0,WR case : AWUNIQUE,
,AXREGION, 18:15,ro,0x0,,
,AXQOS, 14:11,ro,0x0,,
,AXPROT, 10:8,ro,0x0,,
,AXCACHE, 7:4,ro,0x0,,
,RESERVED,3,ro,,,
,AXLOCK,2,ro,0x0,,
,AXBURST, 1:0,ro,0x0,,
WR_REQ_DESC_N_AXADDR_0_REG,,,,,,
,ADDR, 31:0,ro,0x0,DUT address (awaddr),
WR_REQ_DESC_N_AXADDR_1_REG,,,,,,
,ADDR, 31:0,ro,0x0,DUT address (awaddr),
WR_REQ_DESC_N_AXADDR_2_REG,,,,,,
,ADDR, 31:0,ro,0x0,DUT address (awaddr),
WR_REQ_DESC_N_AXADDR_3_REG,,,,,,
,ADDR, 31:0,ro,0x0,DUT address (awaddr),
WR_REQ_DESC_N_AXID_0_REG,,,,,,
,AXID, 31:0,ro,0x0,AXI AXID (awid),
WR_REQ_DESC_N_AXID_1_REG,,,,,,
,AXID, 31:0,ro,0x0,AXI AXID (awid),
WR_REQ_DESC_N_AXID_2_REG,,,,,,
,AXID, 31:0,ro,0x0,AXI AXID (awid),
WR_REQ_DESC_N_AXID_3_REG,,,,,,
,AXID, 31:0,ro,0x0,AXI AXID (awid),
WR_REQ_DESC_N_AXUSER_0_REG,,,,,,
,AXUSER, 31:0,ro,0x0,AXUSER (awuser), 31:0 
WR_REQ_DESC_N_AXUSER_1_REG,,,,,,
,AXUSER, 31:0,ro,0x0,AXUSER (awuser), 63:32
WR_REQ_DESC_N_AXUSER_2_REG,,,,,,
,AXUSER, 31:0,ro,0x0,AXUSER (awuser), 95:64
WR_REQ_DESC_N_AXUSER_3_REG,,,,,,
,AXUSER, 31:0,ro,0x0,AXUSER (awuser), 127:96
WR_REQ_DESC_N_AXUSER_4_REG,,,,,,
,AXUSER, 31:0,ro,0x0,AXUSER (awuser), 159:128
WR_REQ_DESC_N_AXUSER_5_REG,,,,,,
,AXUSER, 31:0,ro,0x0,AXUSER (awuser), 191:160
WR_REQ_DESC_N_AXUSER_6_REG,,,,,,
,AXUSER, 31:0,ro,0x0,AXUSER (awuser), 223:192
WR_REQ_DESC_N_AXUSER_7_REG,,,,,,
,AXUSER, 31:0,ro,0x0,AXUSER (awuser), 255:224
WR_REQ_DESC_N_AXUSER_8_REG,,,,,,
,AXUSER, 31:0,ro,0x0,AXUSER (awuser),255:224
WR_REQ_DESC_N_AXUSER_9_REG,,,,,,
,AXUSER, 31:0,ro,0x0,AXUSER (awuser), 287:256
WR_REQ_DESC_N_AXUSER_10_REG,,,,,,
,AXUSER, 31:0,ro,0x0,AXUSER (awuser), 319:288
WR_REQ_DESC_N_AXUSER_11_REG,,,,,,
,AXUSER, 31:0,ro,0x0,AXUSER (awuser), 351:320
WR_REQ_DESC_N_AXUSER_12_REG,,,,,,
,AXUSER, 31:0,ro,0x0,AXUSER (awuser), 383:352
WR_REQ_DESC_N_AXUSER_13_REG,,,,,,
,AXUSER, 31:0,ro,0x0,AXUSER (awuser), 415:384
WR_REQ_DESC_N_AXUSER_14_REG,,,,,,
,AXUSER, 31:0,ro,0x0,AXUSER (awuser), 447:416
WR_REQ_DESC_N_AXUSER_15_REG,, ,,,,
,AXUSER, 31:0,ro,0x0,AXUSER (awuser), 511:480
WR_REQ_DESC_N_WUSER_0_REG,,,,,,
,WUSER, 31:0,ro,0x0,Only value of WUSER of Last beat of transaction is latched., 31:0 
WR_REQ_DESC_N_WUSER_1_REG,,,,,,
,WUSER, 31:0,ro,0x0,Only value of WUSER of Last beat of transaction is latched., 63:32
WR_REQ_DESC_N_WUSER_2_REG,,,,,,
,WUSER, 31:0,ro,0x0,Only value of WUSER of Last beat of transaction is latched., 95:64
WR_REQ_DESC_N_WUSER_3_REG,, ,,,,
,WUSER, 31:0,ro,0x0,Only value of WUSER of Last beat of transaction is latched., 127:96
WR_REQ_DESC_N_WUSER_4_REG,,,,,,
,WUSER, 31:0,ro,0x0,Only value of WUSER of Last beat of transaction is latched., 159:128
WR_REQ_DESC_N_WUSER_5_REG,,,,,,
,WUSER, 31:0,ro,0x0,Only value of WUSER of Last beat of transaction is latched., 191:160
WR_REQ_DESC_N_WUSER_6_REG,,,,,,
,WUSER, 31:0,ro,0x0,Only value of WUSER of Last beat of transaction is latched., 223:192
WR_REQ_DESC_N_WUSER_7_REG,, ,,,,
,WUSER, 31:0,ro,0x0,Only value of WUSER of Last beat of transaction is latched., 255:224
WR_REQ_DESC_N_WUSER_8_REG,,,,,,
,WUSER, 31:0,ro,0x0,Only value of WUSER of Last beat of transaction is latched.,255:224
WR_REQ_DESC_N_WUSER_9_REG,,,,,,
,WUSER, 31:0,ro,0x0,Only value of WUSER of Last beat of transaction is latched., 287:256
WR_REQ_DESC_N_WUSER_10_REG,,,,,,
,WUSER, 31:0,ro,0x0,Only value of WUSER of Last beat of transaction is latched., 319:288
WR_REQ_DESC_N_WUSER_11_REG,, ,,,,
,WUSER, 31:0,ro,0x0,Only value of WUSER of Last beat of transaction is latched., 351:320
WR_REQ_DESC_N_WUSER_12_REG,,,,,,
,WUSER, 31:0,ro,0x0,Only value of WUSER of Last beat of transaction is latched., 383:352
WR_REQ_DESC_N_WUSER_13_REG,,,,,,
,WUSER, 31:0,ro,0x0,Only value of WUSER of Last beat of transaction is latched., 415:384
WR_REQ_DESC_N_WUSER_14_REG,,,,,,
,WUSER, 31:0,ro,0x0,Only value of WUSER of Last beat of transaction is latched., 447:416
WR_REQ_DESC_N_WUSER_15_REG,, ,,,,
,WUSER, 31:0,ro,0x0,Only value of WUSER of Last beat of transaction is latched., 511:480
WR_RESP_DESC_N_RESP_REG,,,,,,
,RESERVED, 31:5,rw,0x0,,
,RESP, 4:0,rw,0x0,"RD case : [3:0]
WR case : [1:0]
SN case : [4:0]",
WR_RESP_DESC_N_XID_0_REG,,,,,,
,XID, 31:0,rw,0x0,AXI XID (bid),
WR_RESP_DESC_N_XID_1_REG,,,,,,
,XID, 31:0,rw,0x0,AXI XID (bid),
WR_RESP_DESC_N_XID_2_REG,,,,,,
,XID, 31:0,rw,0x0,AXI XID (bid),
WR_RESP_DESC_N_XID_3_REG,,,,,,
,XID, 31:0,rw,0x0,AXI XID (bid),
WR_RESP_DESC_N_XUSER_0_REG,,,,,,
,XUSER, 31:0,rw,0x0,BUSER, 31:0 
WR_RESP_DESC_N_XUSER_1_REG,,,,,,
,XUSER, 31:0,rw,0x0,BUSER, 63:32
WR_RESP_DESC_N_XUSER_2_REG,,,,,,
,XUSER, 31:0,rw,0x0,BUSER, 95:64
WR_RESP_DESC_N_XUSER_3_REG,, ,,,,
,XUSER, 31:0,rw,0x0,BUSER, 127:96
WR_RESP_DESC_N_XUSER_4_REG,,,,,,
,XUSER, 31:0,rw,0x0,BUSER, 159:128
WR_RESP_DESC_N_XUSER_5_REG,,,,,,
,XUSER, 31:0,rw,0x0,BUSER, 191:160
WR_RESP_DESC_N_XUSER_6_REG,,,,,,
,XUSER, 31:0,rw,0x0,BUSER, 223:192
WR_RESP_DESC_N_XUSER_7_REG,, ,,,,
,XUSER, 31:0,rw,0x0,BUSER, 255:224
WR_RESP_DESC_N_XUSER_8_REG,,,,,,
,XUSER, 31:0,rw,0x0,BUSER,255:224
WR_RESP_DESC_N_XUSER_9_REG,,,,,,
,XUSER, 31:0,rw,0x0,BUSER, 287:256
WR_RESP_DESC_N_XUSER_10_REG,,,,,,
,XUSER, 31:0,rw,0x0,BUSER, 319:288
WR_RESP_DESC_N_XUSER_11_REG,, ,,,,
,XUSER, 31:0,rw,0x0,BUSER, 351:320
WR_RESP_DESC_N_XUSER_12_REG,,,,,,
,XUSER, 31:0,rw,0x0,BUSER, 383:352
WR_RESP_DESC_N_XUSER_13_REG,,,,,,
,XUSER, 31:0,rw,0x0,BUSER, 415:384
WR_RESP_DESC_N_XUSER_14_REG,,,,,,
,XUSER, 31:0,rw,0x0,BUSER, 447:416
WR_RESP_DESC_N_XUSER_15_REG,, ,,,,
,XUSER, 31:0,rw,0x0,BUSER, 511:480
SN_REQ_DESC_N_ATTR_REG,,,,,,
,RESERVED, 31:28,rw,0x0,,
,ACSNOOP, 27:24,rw,0x0,,
,RESERVED, 23:11,rw,0x0,,
,ACPROT, 10:8,rw,0x0,,
,RESERVED, 7:0,rw,0x0,,
SN_REQ_DESC_N_ACADDR_0_REG,,,,,,
,ADDR, 31:0,rw,0x0,Snoop DUT address (acaddr),
SN_REQ_DESC_N_ACADDR_1_REG,,,,,,
,ADDR, 31:0,rw,0x0,Snoop DUT address (acaddr),
SN_REQ_DESC_N_ACADDR_2_REG,,,,,,
,ADDR, 31:0,rw,0x0,Snoop DUT address (acaddr),
SN_REQ_DESC_N_ACADDR_3_REG,,,,,,
,ADDR, 31:0,rw,0x0,Snoop DUT address (acaddr),
SN_RESP_DESC_N_RESP_REG,,,,,,
,RESERVED, 31:5,ro,0x0,,
,RESP, 4:0,ro,0x0,SN case : [4:0],
