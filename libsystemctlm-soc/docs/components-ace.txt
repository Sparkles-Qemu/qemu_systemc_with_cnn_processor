ACEMaster
----------

The ACEMaster consists of a TLM traffic generator connected to an ACE
cache. A traffic description, given at class construction, is forwarded to
the ACE master's internal TLM traffic generator. The TLM generic payloads
created by the traffic generator are thereafter pipelined into an ACE
cache (through a barrier processor making sure that the read / write ACE
barriers won't stall).

    ACEMaster                 TLM initiator socket (ACE)
    .------------------------.<--------------------->
   |            .----------. |
   |           | cache_ace | |
   |  Traffic  |           | |
   | generator '-----------' |   TLM snoop target
   |                         | <-----------------
    '------------------------'   b_transport()

ACELiteMaster
-------------

The ACELiteMaster works in a similar fashion as the ACEMaster. At class
construction it receives a traffic description that is forwarded to the
internal TLM traffic generator. The difference with the ACEMaster is that
the ACELiteMaster does not contain a cache but instead translates the
generic payloads created by it's internal traffic generator into ACELite
transactions.

   ACELiteMaster
   .----------.
  |           |
  |           |TLM initiator socket (ACELite)
  |  Traffic  |<--------------------->
  | generator |
  |           |
   '----------'

cache_ace
---------

The ACE cache receives TLM generic payloads through an input TLM target
socket's b_transport function. When it is required for processing the
transaction, the ACE cache fetches or evicts cache lines by outputting ACE
transactions on it's output TLM initiator socket. These transactions are
described with a TLM generic payload and an attached genattr_extension.
It also contains a snoop target socket for receiving snoop transactions
(snoop transactions are also described in a TLM generic payload with an
genattr_extension).

The ACE cache supports two modes (configured at construction), WriteBack
and WriteThrough. Depending on the mode a different set of ACE
transactions, applicable to mode, is generated by the cache.

                                   TLM initiator socket (ACE)
                     .----------.<--------------------->
  TLM target socket | cache_ace |
  <---------------->|           |  TLM snoop target socket
     b_transport()  '-----------'<------------------------>
                                     b_transport()

iconnect_ace
------------

The ACE interconnect contains ACE ports and ACELite ports and a downstream
port. In the same way as the ACE cache the ACE interconnect operates with
TLM generic payloads with attached genattr_extensions describing ACE
transactions. When required the interconnect snoops the connected ACE
masters.

 .---------------------------------------------------.
| |         ||         |   |         | |         |   |
| | ACEPort || ACEPort |...| ACELite | | ACELite |...|
| |         ||         |   |   Port  | |   Port  |   |
| '---------''---------'   '---------' '---------'   |
|                                                    |
| iconnect_ace        .------------.                 |
|                     |            |                 |
|                     | Downstream |                 |
|                     |   Port     |                 |
 '---------------------------------------------------'

The ACE slave ports on the interconnect have a TLM target socket for
receiving ACE transactions and a TLM snoop initiator socket for outputting
snoop requuest towards a master.

               TLM target socket (ACE)
   .----------.<--------------------->
  |           |  b_transport()
  | ACEPort_S |
  |           |  TLM snoop initiator socket
  '-----------'<---------------------------->

ACELite ports have a TLM target socket for receiving ACELite transacations
(but do not have a snoop initiator socket). The downstream port contains
an TLM initiator socket for forwarding transactions towards a slave
(downstream).

ACE / ACELite traffic generation
--------------------------------

For generating ACE / ACELite traffic against an interconnect an ACE /
ACELite master can be pipelined with a TLM to ACE / ACELite bridge. The
bridges will then handle the ACE signal wiggling required.

 .----------. TLM  .---------------.
| ACEMaster | <--> | tlm2ace_bridge | ----> ACE signal wiggling
 '----------'       '---------------'

With the ACE interconnect pipelined to an ACE to TLM bridge ACE snoop
transactions can be generated against an ACE Master. The bridge will then
handle the ACE signal wiggling required.

 .--------------------------. TLM   .---------------.
| iconnect_ace  | ACEPort_S | <--> | ace2tlm_bridge | ----> ACE signal
|               '-----------|       '---------------'        wiggling
|                           |
'--------------------------'
